Nonterminals useless in grammar

   array
   procedure


Terminals unused in grammar

   CHAR
   DEFAULT
   DO
   OF
   PROCEDURE
   MOD
   NOT_EQUAL
   NUMBER
   STR


Rules useless in grammar

   79 array: ARRAY ID ':' REAL '.' '.' REAL OF type

   80 procedure: ID '(' functionVarA functionVarB ')' content


Rules useless in parser due to conflicts

   29 content: content content
   32        | statments
   33        | %empty

   67 function_invocation: ID

   77 procedure_invacation: ID '(' functionInputA functionInputB ')'
   78                     | ID


State 0 conflicts: 3 shift/reduce
State 7 conflicts: 20 shift/reduce, 18 reduce/reduce
State 13 conflicts: 22 reduce/reduce
State 15 conflicts: 19 shift/reduce, 20 reduce/reduce
State 21 conflicts: 19 shift/reduce, 20 reduce/reduce
State 31 conflicts: 3 shift/reduce, 21 reduce/reduce
State 32 conflicts: 17 shift/reduce, 1 reduce/reduce
State 36 conflicts: 1 shift/reduce
State 52 conflicts: 17 shift/reduce, 21 reduce/reduce
State 53 conflicts: 20 shift/reduce, 20 reduce/reduce
State 61 conflicts: 20 shift/reduce, 20 reduce/reduce
State 63 conflicts: 1 shift/reduce
State 65 conflicts: 17 shift/reduce, 22 reduce/reduce
State 85 conflicts: 1 shift/reduce
State 88 conflicts: 1 shift/reduce
State 93 conflicts: 19 shift/reduce, 21 reduce/reduce
State 94 conflicts: 1 reduce/reduce
State 97 conflicts: 19 shift/reduce, 21 reduce/reduce
State 100 conflicts: 13 shift/reduce
State 101 conflicts: 13 shift/reduce
State 102 conflicts: 13 shift/reduce
State 103 conflicts: 13 shift/reduce
State 104 conflicts: 13 shift/reduce
State 105 conflicts: 13 shift/reduce
State 106 conflicts: 13 shift/reduce
State 107 conflicts: 13 shift/reduce
State 108 conflicts: 13 shift/reduce
State 109 conflicts: 13 shift/reduce
State 110 conflicts: 13 shift/reduce
State 111 conflicts: 13 shift/reduce
State 112 conflicts: 13 shift/reduce
State 116 conflicts: 2 shift/reduce
State 125 conflicts: 21 shift/reduce, 21 reduce/reduce
State 132 conflicts: 1 shift/reduce, 2 reduce/reduce
State 135 conflicts: 22 reduce/reduce
State 138 conflicts: 19 shift/reduce, 20 reduce/reduce
State 144 conflicts: 20 shift/reduce, 20 reduce/reduce
State 147 conflicts: 19 shift/reduce, 20 reduce/reduce
State 148 conflicts: 19 shift/reduce, 20 reduce/reduce
State 151 conflicts: 20 shift/reduce, 20 reduce/reduce
State 152 conflicts: 20 shift/reduce, 20 reduce/reduce
State 153 conflicts: 19 shift/reduce, 20 reduce/reduce
State 157 conflicts: 20 shift/reduce, 20 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: declarations statments

    2 constants: CONST ID ':' type ASSIGN constant_exp
    3          | CONST ID ASSIGN constant_exp

    4 variable: VAR ID ':' type ASSIGN constant_exp
    5         | VAR ID ':' type
    6         | VAR ID ASSIGN constant_exp

    7 type: BOOL
    8     | INT
    9     | REAL

   10 constant_exp: STRING
   11             | REAL
   12             | '-' REAL
   13             | TRUE
   14             | FALSE

   15 declarations: declarations declarations
   16             | variable
   17             | constants
   18             | function
   19             | %empty

   20 statments: statments statments
   21          | statment
   22          | %empty

   23 function: FUNCTION ID '(' functionVarA functionVarB ')' ':' type content END ID

   24 functionVarA: ID ':' type
   25             | %empty

   26 functionVarB: ',' ID ':' type
   27             | functionVarB functionVarB
   28             | %empty

   29 content: content content
   30        | variable
   31        | constants
   32        | statments
   33        | %empty

   34 statment: block
   35         | simple
   36         | function_invocation
   37         | procedure_invacation
   38         | expression
   39         | conditional
   40         | loop

   41 block: BEG content END

   42 simple: ID ASSIGN expression
   43       | PUT '(' expression ')'
   44       | GET ID
   45       | RETURN
   46       | RESULT expression
   47       | EXIT WHEN bool_expression
   48       | SKIP

   49 expression: expression '+' expression
   50           | expression '-' expression
   51           | expression '*' expression
   52           | expression '/' expression
   53           | bool_expression
   54           | ID
   55           | ARRAY '[' INT ']'
   56           | constant_exp

   57 bool_expression: expression '<' expression
   58                | expression '>' expression
   59                | expression SMALLER_EQUAL expression
   60                | expression MORE_EQUAL expression
   61                | expression '=' expression
   62                | expression 'N' expression
   63                | expression NOT expression
   64                | expression AND expression
   65                | expression OR expression

   66 function_invocation: ID '(' functionInputA functionInputB ')'
   67                    | ID

   68 functionInputA: expression

   69 functionInputB: ',' expression

   70 conditional: IF bool_expression THEN content ELSE content END IF
   71            | IF bool_expression THEN content END IF

   72 loop: LOOP content END LOOP
   73     | FOR ID ':' const_exp '.' '.' constant_exp content END FOR
   74     | FOR DECREASING ID ':' const_exp '.' '.' constant_exp content END FOR

   75 const_exp: INT
   76          | ID

   77 procedure_invacation: ID '(' functionInputA functionInputB ')'
   78                     | ID


Terminals, with rules where they appear

$end (0) 0
'(' (40) 23 43 66 77
')' (41) 23 43 66 77
'*' (42) 51
'+' (43) 49
',' (44) 26 69
'-' (45) 12 50
'.' (46) 73 74
'/' (47) 52
':' (58) 2 4 5 23 24 26 73 74
'<' (60) 57
'=' (61) 61
'>' (62) 58
'N' (78) 62
'[' (91) 55
']' (93) 55
error (256)
ID (258) 2 3 4 5 6 23 24 26 42 44 54 66 67 73 74 76 77 78
ARRAY (259) 55
BEG (260) 41
BOOL (261) 7
CHAR (262)
CONST (263) 2 3
DECREASING (264) 74
DEFAULT (265)
DO (266)
ELSE (267) 70
END (268) 23 41 70 71 72 73 74
EXIT (269) 47
FALSE (270) 14
FOR (271) 73 74
FUNCTION (272) 23
GET (273) 44
IF (274) 70 71
INT (275) 8 55 75
LOOP (276) 72
OF (277)
PUT (278) 43
PROCEDURE (279)
REAL (280) 9 11 12
RESULT (281) 46
RETURN (282) 45
SKIP (283) 48
STRING (284) 10
THEN (285) 70 71
TRUE (286) 13
VAR (287) 4 5 6
WHEN (288) 47
MOD (289)
ASSIGN (290) 2 3 4 6 42
SMALLER_EQUAL (291) 59
MORE_EQUAL (292) 60
NOT_EQUAL (293)
AND (294) 64
OR (295) 65
NOT (296) 63
NUMBER (297)
STR (298)


Nonterminals, with rules where they appear

$accept (59)
    on left: 0
program (60)
    on left: 1, on right: 0
constants (61)
    on left: 2 3, on right: 17 31
variable (62)
    on left: 4 5 6, on right: 16 30
type (63)
    on left: 7 8 9, on right: 2 4 5 23 24 26
constant_exp (64)
    on left: 10 11 12 13 14, on right: 2 3 4 6 56 73 74
declarations (65)
    on left: 15 16 17 18 19, on right: 1 15
statments (66)
    on left: 20 21 22, on right: 1 20 32
function (67)
    on left: 23, on right: 18
functionVarA (68)
    on left: 24 25, on right: 23
functionVarB (69)
    on left: 26 27 28, on right: 23 27
content (70)
    on left: 29 30 31 32 33, on right: 23 29 41 70 71 72 73 74
statment (71)
    on left: 34 35 36 37 38 39 40, on right: 21
block (72)
    on left: 41, on right: 34
simple (73)
    on left: 42 43 44 45 46 47 48, on right: 35
expression (74)
    on left: 49 50 51 52 53 54 55 56, on right: 38 42 43 46 49 50 51
    52 57 58 59 60 61 62 63 64 65 68 69
bool_expression (75)
    on left: 57 58 59 60 61 62 63 64 65, on right: 47 53 70 71
function_invocation (76)
    on left: 66 67, on right: 36
functionInputA (77)
    on left: 68, on right: 66 77
functionInputB (78)
    on left: 69, on right: 66 77
conditional (79)
    on left: 70 71, on right: 39
loop (80)
    on left: 72 73 74, on right: 40
const_exp (81)
    on left: 75 76, on right: 73 74
procedure_invacation (82)
    on left: 77 78, on right: 37


State 0

    0 $accept: . program $end

    CONST     shift, and go to state 1
    FUNCTION  shift, and go to state 2
    VAR       shift, and go to state 3

    CONST     [reduce using rule 19 (declarations)]
    FUNCTION  [reduce using rule 19 (declarations)]
    VAR       [reduce using rule 19 (declarations)]
    $default  reduce using rule 19 (declarations)

    program       go to state 4
    constants     go to state 5
    variable      go to state 6
    declarations  go to state 7
    function      go to state 8


State 1

    2 constants: CONST . ID ':' type ASSIGN constant_exp
    3          | CONST . ID ASSIGN constant_exp

    ID  shift, and go to state 9


State 2

   23 function: FUNCTION . ID '(' functionVarA functionVarB ')' ':' type content END ID

    ID  shift, and go to state 10


State 3

    4 variable: VAR . ID ':' type ASSIGN constant_exp
    5         | VAR . ID ':' type
    6         | VAR . ID ASSIGN constant_exp

    ID  shift, and go to state 11


State 4

    0 $accept: program . $end

    $end  shift, and go to state 12


State 5

   17 declarations: constants .

    $default  reduce using rule 17 (declarations)


State 6

   16 declarations: variable .

    $default  reduce using rule 16 (declarations)


State 7

    1 program: declarations . statments
   15 declarations: declarations . declarations

    ID        shift, and go to state 13
    ARRAY     shift, and go to state 14
    BEG       shift, and go to state 15
    CONST     shift, and go to state 1
    EXIT      shift, and go to state 16
    FALSE     shift, and go to state 17
    FOR       shift, and go to state 18
    FUNCTION  shift, and go to state 2
    GET       shift, and go to state 19
    IF        shift, and go to state 20
    LOOP      shift, and go to state 21
    PUT       shift, and go to state 22
    REAL      shift, and go to state 23
    RESULT    shift, and go to state 24
    RETURN    shift, and go to state 25
    SKIP      shift, and go to state 26
    STRING    shift, and go to state 27
    TRUE      shift, and go to state 28
    VAR       shift, and go to state 3
    '-'       shift, and go to state 29

    $end      reduce using rule 19 (declarations)
    $end      [reduce using rule 22 (statments)]
    ID        [reduce using rule 19 (declarations)]
    ID        [reduce using rule 22 (statments)]
    ARRAY     [reduce using rule 19 (declarations)]
    ARRAY     [reduce using rule 22 (statments)]
    BEG       [reduce using rule 19 (declarations)]
    BEG       [reduce using rule 22 (statments)]
    CONST     [reduce using rule 19 (declarations)]
    EXIT      [reduce using rule 19 (declarations)]
    EXIT      [reduce using rule 22 (statments)]
    FALSE     [reduce using rule 19 (declarations)]
    FALSE     [reduce using rule 22 (statments)]
    FOR       [reduce using rule 19 (declarations)]
    FOR       [reduce using rule 22 (statments)]
    FUNCTION  [reduce using rule 19 (declarations)]
    GET       [reduce using rule 19 (declarations)]
    GET       [reduce using rule 22 (statments)]
    IF        [reduce using rule 19 (declarations)]
    IF        [reduce using rule 22 (statments)]
    LOOP      [reduce using rule 19 (declarations)]
    LOOP      [reduce using rule 22 (statments)]
    PUT       [reduce using rule 19 (declarations)]
    PUT       [reduce using rule 22 (statments)]
    REAL      [reduce using rule 19 (declarations)]
    REAL      [reduce using rule 22 (statments)]
    RESULT    [reduce using rule 19 (declarations)]
    RESULT    [reduce using rule 22 (statments)]
    RETURN    [reduce using rule 19 (declarations)]
    RETURN    [reduce using rule 22 (statments)]
    SKIP      [reduce using rule 19 (declarations)]
    SKIP      [reduce using rule 22 (statments)]
    STRING    [reduce using rule 19 (declarations)]
    STRING    [reduce using rule 22 (statments)]
    TRUE      [reduce using rule 19 (declarations)]
    TRUE      [reduce using rule 22 (statments)]
    VAR       [reduce using rule 19 (declarations)]
    '-'       [reduce using rule 19 (declarations)]
    '-'       [reduce using rule 22 (statments)]
    $default  reduce using rule 19 (declarations)

    constants             go to state 5
    variable              go to state 6
    constant_exp          go to state 30
    declarations          go to state 31
    statments             go to state 32
    function              go to state 8
    statment              go to state 33
    block                 go to state 34
    simple                go to state 35
    expression            go to state 36
    bool_expression       go to state 37
    function_invocation   go to state 38
    conditional           go to state 39
    loop                  go to state 40
    procedure_invacation  go to state 41


State 8

   18 declarations: function .

    $default  reduce using rule 18 (declarations)


State 9

    2 constants: CONST ID . ':' type ASSIGN constant_exp
    3          | CONST ID . ASSIGN constant_exp

    ASSIGN  shift, and go to state 42
    ':'     shift, and go to state 43


State 10

   23 function: FUNCTION ID . '(' functionVarA functionVarB ')' ':' type content END ID

    '('  shift, and go to state 44


State 11

    4 variable: VAR ID . ':' type ASSIGN constant_exp
    5         | VAR ID . ':' type
    6         | VAR ID . ASSIGN constant_exp

    ASSIGN  shift, and go to state 45
    ':'     shift, and go to state 46


State 12

    0 $accept: program $end .

    $default  accept


State 13

   42 simple: ID . ASSIGN expression
   54 expression: ID .
   66 function_invocation: ID . '(' functionInputA functionInputB ')'
   67                    | ID .
   77 procedure_invacation: ID . '(' functionInputA functionInputB ')'
   78                     | ID .

    ASSIGN  shift, and go to state 47
    '('     shift, and go to state 48

    $end      reduce using rule 54 (expression)
    $end      [reduce using rule 67 (function_invocation)]
    $end      [reduce using rule 78 (procedure_invacation)]
    ID        reduce using rule 54 (expression)
    ID        [reduce using rule 67 (function_invocation)]
    ID        [reduce using rule 78 (procedure_invacation)]
    ARRAY     reduce using rule 54 (expression)
    ARRAY     [reduce using rule 67 (function_invocation)]
    ARRAY     [reduce using rule 78 (procedure_invacation)]
    BEG       reduce using rule 54 (expression)
    BEG       [reduce using rule 67 (function_invocation)]
    BEG       [reduce using rule 78 (procedure_invacation)]
    CONST     reduce using rule 54 (expression)
    CONST     [reduce using rule 67 (function_invocation)]
    CONST     [reduce using rule 78 (procedure_invacation)]
    ELSE      reduce using rule 54 (expression)
    ELSE      [reduce using rule 67 (function_invocation)]
    ELSE      [reduce using rule 78 (procedure_invacation)]
    END       reduce using rule 54 (expression)
    END       [reduce using rule 67 (function_invocation)]
    END       [reduce using rule 78 (procedure_invacation)]
    EXIT      reduce using rule 54 (expression)
    EXIT      [reduce using rule 67 (function_invocation)]
    EXIT      [reduce using rule 78 (procedure_invacation)]
    FALSE     reduce using rule 54 (expression)
    FALSE     [reduce using rule 67 (function_invocation)]
    FALSE     [reduce using rule 78 (procedure_invacation)]
    FOR       reduce using rule 54 (expression)
    FOR       [reduce using rule 67 (function_invocation)]
    FOR       [reduce using rule 78 (procedure_invacation)]
    GET       reduce using rule 54 (expression)
    GET       [reduce using rule 67 (function_invocation)]
    GET       [reduce using rule 78 (procedure_invacation)]
    IF        reduce using rule 54 (expression)
    IF        [reduce using rule 67 (function_invocation)]
    IF        [reduce using rule 78 (procedure_invacation)]
    LOOP      reduce using rule 54 (expression)
    LOOP      [reduce using rule 67 (function_invocation)]
    LOOP      [reduce using rule 78 (procedure_invacation)]
    PUT       reduce using rule 54 (expression)
    PUT       [reduce using rule 67 (function_invocation)]
    PUT       [reduce using rule 78 (procedure_invacation)]
    REAL      reduce using rule 54 (expression)
    REAL      [reduce using rule 67 (function_invocation)]
    REAL      [reduce using rule 78 (procedure_invacation)]
    RESULT    reduce using rule 54 (expression)
    RESULT    [reduce using rule 67 (function_invocation)]
    RESULT    [reduce using rule 78 (procedure_invacation)]
    RETURN    reduce using rule 54 (expression)
    RETURN    [reduce using rule 67 (function_invocation)]
    RETURN    [reduce using rule 78 (procedure_invacation)]
    SKIP      reduce using rule 54 (expression)
    SKIP      [reduce using rule 67 (function_invocation)]
    SKIP      [reduce using rule 78 (procedure_invacation)]
    STRING    reduce using rule 54 (expression)
    STRING    [reduce using rule 67 (function_invocation)]
    STRING    [reduce using rule 78 (procedure_invacation)]
    TRUE      reduce using rule 54 (expression)
    TRUE      [reduce using rule 67 (function_invocation)]
    TRUE      [reduce using rule 78 (procedure_invacation)]
    VAR       reduce using rule 54 (expression)
    VAR       [reduce using rule 67 (function_invocation)]
    VAR       [reduce using rule 78 (procedure_invacation)]
    '-'       reduce using rule 54 (expression)
    '-'       [reduce using rule 67 (function_invocation)]
    '-'       [reduce using rule 78 (procedure_invacation)]
    $default  reduce using rule 54 (expression)


State 14

   55 expression: ARRAY . '[' INT ']'

    '['  shift, and go to state 49


State 15

   41 block: BEG . content END

    ID      shift, and go to state 13
    ARRAY   shift, and go to state 14
    BEG     shift, and go to state 15
    CONST   shift, and go to state 1
    EXIT    shift, and go to state 16
    FALSE   shift, and go to state 17
    FOR     shift, and go to state 18
    GET     shift, and go to state 19
    IF      shift, and go to state 20
    LOOP    shift, and go to state 21
    PUT     shift, and go to state 22
    REAL    shift, and go to state 23
    RESULT  shift, and go to state 24
    RETURN  shift, and go to state 25
    SKIP    shift, and go to state 26
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    VAR     shift, and go to state 3
    '-'     shift, and go to state 29

    ID        [reduce using rule 22 (statments)]
    ID        [reduce using rule 33 (content)]
    ARRAY     [reduce using rule 22 (statments)]
    ARRAY     [reduce using rule 33 (content)]
    BEG       [reduce using rule 22 (statments)]
    BEG       [reduce using rule 33 (content)]
    CONST     [reduce using rule 22 (statments)]
    CONST     [reduce using rule 33 (content)]
    END       reduce using rule 22 (statments)
    END       [reduce using rule 33 (content)]
    EXIT      [reduce using rule 22 (statments)]
    EXIT      [reduce using rule 33 (content)]
    FALSE     [reduce using rule 22 (statments)]
    FALSE     [reduce using rule 33 (content)]
    FOR       [reduce using rule 22 (statments)]
    FOR       [reduce using rule 33 (content)]
    GET       [reduce using rule 22 (statments)]
    GET       [reduce using rule 33 (content)]
    IF        [reduce using rule 22 (statments)]
    IF        [reduce using rule 33 (content)]
    LOOP      [reduce using rule 22 (statments)]
    LOOP      [reduce using rule 33 (content)]
    PUT       [reduce using rule 22 (statments)]
    PUT       [reduce using rule 33 (content)]
    REAL      [reduce using rule 22 (statments)]
    REAL      [reduce using rule 33 (content)]
    RESULT    [reduce using rule 22 (statments)]
    RESULT    [reduce using rule 33 (content)]
    RETURN    [reduce using rule 22 (statments)]
    RETURN    [reduce using rule 33 (content)]
    SKIP      [reduce using rule 22 (statments)]
    SKIP      [reduce using rule 33 (content)]
    STRING    [reduce using rule 22 (statments)]
    STRING    [reduce using rule 33 (content)]
    TRUE      [reduce using rule 22 (statments)]
    TRUE      [reduce using rule 33 (content)]
    VAR       [reduce using rule 22 (statments)]
    VAR       [reduce using rule 33 (content)]
    '-'       [reduce using rule 22 (statments)]
    '-'       [reduce using rule 33 (content)]
    $default  reduce using rule 22 (statments)

    constants             go to state 50
    variable              go to state 51
    constant_exp          go to state 30
    statments             go to state 52
    content               go to state 53
    statment              go to state 33
    block                 go to state 34
    simple                go to state 35
    expression            go to state 36
    bool_expression       go to state 37
    function_invocation   go to state 38
    conditional           go to state 39
    loop                  go to state 40
    procedure_invacation  go to state 41


State 16

   47 simple: EXIT . WHEN bool_expression

    WHEN  shift, and go to state 54


State 17

   14 constant_exp: FALSE .

    $default  reduce using rule 14 (constant_exp)


State 18

   73 loop: FOR . ID ':' const_exp '.' '.' constant_exp content END FOR
   74     | FOR . DECREASING ID ':' const_exp '.' '.' constant_exp content END FOR

    ID          shift, and go to state 55
    DECREASING  shift, and go to state 56


State 19

   44 simple: GET . ID

    ID  shift, and go to state 57


State 20

   70 conditional: IF . bool_expression THEN content ELSE content END IF
   71            | IF . bool_expression THEN content END IF

    ID      shift, and go to state 58
    ARRAY   shift, and go to state 14
    FALSE   shift, and go to state 17
    REAL    shift, and go to state 23
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    constant_exp     go to state 30
    expression       go to state 59
    bool_expression  go to state 60


State 21

   72 loop: LOOP . content END LOOP

    ID      shift, and go to state 13
    ARRAY   shift, and go to state 14
    BEG     shift, and go to state 15
    CONST   shift, and go to state 1
    EXIT    shift, and go to state 16
    FALSE   shift, and go to state 17
    FOR     shift, and go to state 18
    GET     shift, and go to state 19
    IF      shift, and go to state 20
    LOOP    shift, and go to state 21
    PUT     shift, and go to state 22
    REAL    shift, and go to state 23
    RESULT  shift, and go to state 24
    RETURN  shift, and go to state 25
    SKIP    shift, and go to state 26
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    VAR     shift, and go to state 3
    '-'     shift, and go to state 29

    ID        [reduce using rule 22 (statments)]
    ID        [reduce using rule 33 (content)]
    ARRAY     [reduce using rule 22 (statments)]
    ARRAY     [reduce using rule 33 (content)]
    BEG       [reduce using rule 22 (statments)]
    BEG       [reduce using rule 33 (content)]
    CONST     [reduce using rule 22 (statments)]
    CONST     [reduce using rule 33 (content)]
    END       reduce using rule 22 (statments)
    END       [reduce using rule 33 (content)]
    EXIT      [reduce using rule 22 (statments)]
    EXIT      [reduce using rule 33 (content)]
    FALSE     [reduce using rule 22 (statments)]
    FALSE     [reduce using rule 33 (content)]
    FOR       [reduce using rule 22 (statments)]
    FOR       [reduce using rule 33 (content)]
    GET       [reduce using rule 22 (statments)]
    GET       [reduce using rule 33 (content)]
    IF        [reduce using rule 22 (statments)]
    IF        [reduce using rule 33 (content)]
    LOOP      [reduce using rule 22 (statments)]
    LOOP      [reduce using rule 33 (content)]
    PUT       [reduce using rule 22 (statments)]
    PUT       [reduce using rule 33 (content)]
    REAL      [reduce using rule 22 (statments)]
    REAL      [reduce using rule 33 (content)]
    RESULT    [reduce using rule 22 (statments)]
    RESULT    [reduce using rule 33 (content)]
    RETURN    [reduce using rule 22 (statments)]
    RETURN    [reduce using rule 33 (content)]
    SKIP      [reduce using rule 22 (statments)]
    SKIP      [reduce using rule 33 (content)]
    STRING    [reduce using rule 22 (statments)]
    STRING    [reduce using rule 33 (content)]
    TRUE      [reduce using rule 22 (statments)]
    TRUE      [reduce using rule 33 (content)]
    VAR       [reduce using rule 22 (statments)]
    VAR       [reduce using rule 33 (content)]
    '-'       [reduce using rule 22 (statments)]
    '-'       [reduce using rule 33 (content)]
    $default  reduce using rule 22 (statments)

    constants             go to state 50
    variable              go to state 51
    constant_exp          go to state 30
    statments             go to state 52
    content               go to state 61
    statment              go to state 33
    block                 go to state 34
    simple                go to state 35
    expression            go to state 36
    bool_expression       go to state 37
    function_invocation   go to state 38
    conditional           go to state 39
    loop                  go to state 40
    procedure_invacation  go to state 41


State 22

   43 simple: PUT . '(' expression ')'

    '('  shift, and go to state 62


State 23

   11 constant_exp: REAL .

    $default  reduce using rule 11 (constant_exp)


State 24

   46 simple: RESULT . expression

    ID      shift, and go to state 58
    ARRAY   shift, and go to state 14
    FALSE   shift, and go to state 17
    REAL    shift, and go to state 23
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    constant_exp     go to state 30
    expression       go to state 63
    bool_expression  go to state 37


State 25

   45 simple: RETURN .

    $default  reduce using rule 45 (simple)


State 26

   48 simple: SKIP .

    $default  reduce using rule 48 (simple)


State 27

   10 constant_exp: STRING .

    $default  reduce using rule 10 (constant_exp)


State 28

   13 constant_exp: TRUE .

    $default  reduce using rule 13 (constant_exp)


State 29

   12 constant_exp: '-' . REAL

    REAL  shift, and go to state 64


State 30

   56 expression: constant_exp .

    $default  reduce using rule 56 (expression)


State 31

   15 declarations: declarations . declarations
   15             | declarations declarations .

    CONST     shift, and go to state 1
    FUNCTION  shift, and go to state 2
    VAR       shift, and go to state 3

    $end      reduce using rule 15 (declarations)
    $end      [reduce using rule 19 (declarations)]
    ID        reduce using rule 15 (declarations)
    ID        [reduce using rule 19 (declarations)]
    ARRAY     reduce using rule 15 (declarations)
    ARRAY     [reduce using rule 19 (declarations)]
    BEG       reduce using rule 15 (declarations)
    BEG       [reduce using rule 19 (declarations)]
    CONST     [reduce using rule 15 (declarations)]
    CONST     [reduce using rule 19 (declarations)]
    EXIT      reduce using rule 15 (declarations)
    EXIT      [reduce using rule 19 (declarations)]
    FALSE     reduce using rule 15 (declarations)
    FALSE     [reduce using rule 19 (declarations)]
    FOR       reduce using rule 15 (declarations)
    FOR       [reduce using rule 19 (declarations)]
    FUNCTION  [reduce using rule 15 (declarations)]
    FUNCTION  [reduce using rule 19 (declarations)]
    GET       reduce using rule 15 (declarations)
    GET       [reduce using rule 19 (declarations)]
    IF        reduce using rule 15 (declarations)
    IF        [reduce using rule 19 (declarations)]
    LOOP      reduce using rule 15 (declarations)
    LOOP      [reduce using rule 19 (declarations)]
    PUT       reduce using rule 15 (declarations)
    PUT       [reduce using rule 19 (declarations)]
    REAL      reduce using rule 15 (declarations)
    REAL      [reduce using rule 19 (declarations)]
    RESULT    reduce using rule 15 (declarations)
    RESULT    [reduce using rule 19 (declarations)]
    RETURN    reduce using rule 15 (declarations)
    RETURN    [reduce using rule 19 (declarations)]
    SKIP      reduce using rule 15 (declarations)
    SKIP      [reduce using rule 19 (declarations)]
    STRING    reduce using rule 15 (declarations)
    STRING    [reduce using rule 19 (declarations)]
    TRUE      reduce using rule 15 (declarations)
    TRUE      [reduce using rule 19 (declarations)]
    VAR       [reduce using rule 15 (declarations)]
    VAR       [reduce using rule 19 (declarations)]
    '-'       reduce using rule 15 (declarations)
    '-'       [reduce using rule 19 (declarations)]
    $default  reduce using rule 15 (declarations)

    constants     go to state 5
    variable      go to state 6
    declarations  go to state 31
    function      go to state 8


State 32

    1 program: declarations statments .
   20 statments: statments . statments

    ID      shift, and go to state 13
    ARRAY   shift, and go to state 14
    BEG     shift, and go to state 15
    EXIT    shift, and go to state 16
    FALSE   shift, and go to state 17
    FOR     shift, and go to state 18
    GET     shift, and go to state 19
    IF      shift, and go to state 20
    LOOP    shift, and go to state 21
    PUT     shift, and go to state 22
    REAL    shift, and go to state 23
    RESULT  shift, and go to state 24
    RETURN  shift, and go to state 25
    SKIP    shift, and go to state 26
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    $end      reduce using rule 1 (program)
    $end      [reduce using rule 22 (statments)]
    ID        [reduce using rule 22 (statments)]
    ARRAY     [reduce using rule 22 (statments)]
    BEG       [reduce using rule 22 (statments)]
    EXIT      [reduce using rule 22 (statments)]
    FALSE     [reduce using rule 22 (statments)]
    FOR       [reduce using rule 22 (statments)]
    GET       [reduce using rule 22 (statments)]
    IF        [reduce using rule 22 (statments)]
    LOOP      [reduce using rule 22 (statments)]
    PUT       [reduce using rule 22 (statments)]
    REAL      [reduce using rule 22 (statments)]
    RESULT    [reduce using rule 22 (statments)]
    RETURN    [reduce using rule 22 (statments)]
    SKIP      [reduce using rule 22 (statments)]
    STRING    [reduce using rule 22 (statments)]
    TRUE      [reduce using rule 22 (statments)]
    '-'       [reduce using rule 22 (statments)]
    $default  reduce using rule 1 (program)

    constant_exp          go to state 30
    statments             go to state 65
    statment              go to state 33
    block                 go to state 34
    simple                go to state 35
    expression            go to state 36
    bool_expression       go to state 37
    function_invocation   go to state 38
    conditional           go to state 39
    loop                  go to state 40
    procedure_invacation  go to state 41


State 33

   21 statments: statment .

    $default  reduce using rule 21 (statments)


State 34

   34 statment: block .

    $default  reduce using rule 34 (statment)


State 35

   35 statment: simple .

    $default  reduce using rule 35 (statment)


State 36

   38 statment: expression .
   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . SMALLER_EQUAL expression
   60                | expression . MORE_EQUAL expression
   61                | expression . '=' expression
   62                | expression . 'N' expression
   63                | expression . NOT expression
   64                | expression . AND expression
   65                | expression . OR expression

    SMALLER_EQUAL  shift, and go to state 66
    MORE_EQUAL     shift, and go to state 67
    AND            shift, and go to state 68
    OR             shift, and go to state 69
    NOT            shift, and go to state 70
    '-'            shift, and go to state 71
    '+'            shift, and go to state 72
    '*'            shift, and go to state 73
    '/'            shift, and go to state 74
    '<'            shift, and go to state 75
    '>'            shift, and go to state 76
    '='            shift, and go to state 77
    'N'            shift, and go to state 78

    '-'       [reduce using rule 38 (statment)]
    $default  reduce using rule 38 (statment)


State 37

   53 expression: bool_expression .

    $default  reduce using rule 53 (expression)


State 38

   36 statment: function_invocation .

    $default  reduce using rule 36 (statment)


State 39

   39 statment: conditional .

    $default  reduce using rule 39 (statment)


State 40

   40 statment: loop .

    $default  reduce using rule 40 (statment)


State 41

   37 statment: procedure_invacation .

    $default  reduce using rule 37 (statment)


State 42

    3 constants: CONST ID ASSIGN . constant_exp

    FALSE   shift, and go to state 17
    REAL    shift, and go to state 23
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    constant_exp  go to state 79


State 43

    2 constants: CONST ID ':' . type ASSIGN constant_exp

    BOOL  shift, and go to state 80
    INT   shift, and go to state 81
    REAL  shift, and go to state 82

    type  go to state 83


State 44

   23 function: FUNCTION ID '(' . functionVarA functionVarB ')' ':' type content END ID

    ID  shift, and go to state 84

    $default  reduce using rule 25 (functionVarA)

    functionVarA  go to state 85


State 45

    6 variable: VAR ID ASSIGN . constant_exp

    FALSE   shift, and go to state 17
    REAL    shift, and go to state 23
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    constant_exp  go to state 86


State 46

    4 variable: VAR ID ':' . type ASSIGN constant_exp
    5         | VAR ID ':' . type

    BOOL  shift, and go to state 80
    INT   shift, and go to state 81
    REAL  shift, and go to state 82

    type  go to state 87


State 47

   42 simple: ID ASSIGN . expression

    ID      shift, and go to state 58
    ARRAY   shift, and go to state 14
    FALSE   shift, and go to state 17
    REAL    shift, and go to state 23
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    constant_exp     go to state 30
    expression       go to state 88
    bool_expression  go to state 37


State 48

   66 function_invocation: ID '(' . functionInputA functionInputB ')'
   77 procedure_invacation: ID '(' . functionInputA functionInputB ')'

    ID      shift, and go to state 58
    ARRAY   shift, and go to state 14
    FALSE   shift, and go to state 17
    REAL    shift, and go to state 23
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    constant_exp     go to state 30
    expression       go to state 89
    bool_expression  go to state 37
    functionInputA   go to state 90


State 49

   55 expression: ARRAY '[' . INT ']'

    INT  shift, and go to state 91


State 50

   31 content: constants .

    $default  reduce using rule 31 (content)


State 51

   30 content: variable .

    $default  reduce using rule 30 (content)


State 52

   20 statments: statments . statments
   32 content: statments .

    ID      shift, and go to state 13
    ARRAY   shift, and go to state 14
    BEG     shift, and go to state 15
    EXIT    shift, and go to state 16
    FALSE   shift, and go to state 17
    FOR     shift, and go to state 18
    GET     shift, and go to state 19
    IF      shift, and go to state 20
    LOOP    shift, and go to state 21
    PUT     shift, and go to state 22
    REAL    shift, and go to state 23
    RESULT  shift, and go to state 24
    RETURN  shift, and go to state 25
    SKIP    shift, and go to state 26
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    ID        [reduce using rule 22 (statments)]
    ID        [reduce using rule 32 (content)]
    ARRAY     [reduce using rule 22 (statments)]
    ARRAY     [reduce using rule 32 (content)]
    BEG       [reduce using rule 22 (statments)]
    BEG       [reduce using rule 32 (content)]
    CONST     reduce using rule 22 (statments)
    CONST     [reduce using rule 32 (content)]
    ELSE      reduce using rule 22 (statments)
    ELSE      [reduce using rule 32 (content)]
    END       reduce using rule 22 (statments)
    END       [reduce using rule 32 (content)]
    EXIT      [reduce using rule 22 (statments)]
    EXIT      [reduce using rule 32 (content)]
    FALSE     [reduce using rule 22 (statments)]
    FALSE     [reduce using rule 32 (content)]
    FOR       [reduce using rule 22 (statments)]
    FOR       [reduce using rule 32 (content)]
    GET       [reduce using rule 22 (statments)]
    GET       [reduce using rule 32 (content)]
    IF        [reduce using rule 22 (statments)]
    IF        [reduce using rule 32 (content)]
    LOOP      [reduce using rule 22 (statments)]
    LOOP      [reduce using rule 32 (content)]
    PUT       [reduce using rule 22 (statments)]
    PUT       [reduce using rule 32 (content)]
    REAL      [reduce using rule 22 (statments)]
    REAL      [reduce using rule 32 (content)]
    RESULT    [reduce using rule 22 (statments)]
    RESULT    [reduce using rule 32 (content)]
    RETURN    [reduce using rule 22 (statments)]
    RETURN    [reduce using rule 32 (content)]
    SKIP      [reduce using rule 22 (statments)]
    SKIP      [reduce using rule 32 (content)]
    STRING    [reduce using rule 22 (statments)]
    STRING    [reduce using rule 32 (content)]
    TRUE      [reduce using rule 22 (statments)]
    TRUE      [reduce using rule 32 (content)]
    VAR       reduce using rule 22 (statments)
    VAR       [reduce using rule 32 (content)]
    '-'       [reduce using rule 22 (statments)]
    '-'       [reduce using rule 32 (content)]
    $default  reduce using rule 22 (statments)

    constant_exp          go to state 30
    statments             go to state 65
    statment              go to state 33
    block                 go to state 34
    simple                go to state 35
    expression            go to state 36
    bool_expression       go to state 37
    function_invocation   go to state 38
    conditional           go to state 39
    loop                  go to state 40
    procedure_invacation  go to state 41


State 53

   29 content: content . content
   41 block: BEG content . END

    ID      shift, and go to state 13
    ARRAY   shift, and go to state 14
    BEG     shift, and go to state 15
    CONST   shift, and go to state 1
    END     shift, and go to state 92
    EXIT    shift, and go to state 16
    FALSE   shift, and go to state 17
    FOR     shift, and go to state 18
    GET     shift, and go to state 19
    IF      shift, and go to state 20
    LOOP    shift, and go to state 21
    PUT     shift, and go to state 22
    REAL    shift, and go to state 23
    RESULT  shift, and go to state 24
    RETURN  shift, and go to state 25
    SKIP    shift, and go to state 26
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    VAR     shift, and go to state 3
    '-'     shift, and go to state 29

    ID      [reduce using rule 22 (statments)]
    ID      [reduce using rule 33 (content)]
    ARRAY   [reduce using rule 22 (statments)]
    ARRAY   [reduce using rule 33 (content)]
    BEG     [reduce using rule 22 (statments)]
    BEG     [reduce using rule 33 (content)]
    CONST   [reduce using rule 22 (statments)]
    CONST   [reduce using rule 33 (content)]
    END     [reduce using rule 22 (statments)]
    END     [reduce using rule 33 (content)]
    EXIT    [reduce using rule 22 (statments)]
    EXIT    [reduce using rule 33 (content)]
    FALSE   [reduce using rule 22 (statments)]
    FALSE   [reduce using rule 33 (content)]
    FOR     [reduce using rule 22 (statments)]
    FOR     [reduce using rule 33 (content)]
    GET     [reduce using rule 22 (statments)]
    GET     [reduce using rule 33 (content)]
    IF      [reduce using rule 22 (statments)]
    IF      [reduce using rule 33 (content)]
    LOOP    [reduce using rule 22 (statments)]
    LOOP    [reduce using rule 33 (content)]
    PUT     [reduce using rule 22 (statments)]
    PUT     [reduce using rule 33 (content)]
    REAL    [reduce using rule 22 (statments)]
    REAL    [reduce using rule 33 (content)]
    RESULT  [reduce using rule 22 (statments)]
    RESULT  [reduce using rule 33 (content)]
    RETURN  [reduce using rule 22 (statments)]
    RETURN  [reduce using rule 33 (content)]
    SKIP    [reduce using rule 22 (statments)]
    SKIP    [reduce using rule 33 (content)]
    STRING  [reduce using rule 22 (statments)]
    STRING  [reduce using rule 33 (content)]
    TRUE    [reduce using rule 22 (statments)]
    TRUE    [reduce using rule 33 (content)]
    VAR     [reduce using rule 22 (statments)]
    VAR     [reduce using rule 33 (content)]
    '-'     [reduce using rule 22 (statments)]
    '-'     [reduce using rule 33 (content)]

    constants             go to state 50
    variable              go to state 51
    constant_exp          go to state 30
    statments             go to state 52
    content               go to state 93
    statment              go to state 33
    block                 go to state 34
    simple                go to state 35
    expression            go to state 36
    bool_expression       go to state 37
    function_invocation   go to state 38
    conditional           go to state 39
    loop                  go to state 40
    procedure_invacation  go to state 41


State 54

   47 simple: EXIT WHEN . bool_expression

    ID      shift, and go to state 58
    ARRAY   shift, and go to state 14
    FALSE   shift, and go to state 17
    REAL    shift, and go to state 23
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    constant_exp     go to state 30
    expression       go to state 59
    bool_expression  go to state 94


State 55

   73 loop: FOR ID . ':' const_exp '.' '.' constant_exp content END FOR

    ':'  shift, and go to state 95


State 56

   74 loop: FOR DECREASING . ID ':' const_exp '.' '.' constant_exp content END FOR

    ID  shift, and go to state 96


State 57

   44 simple: GET ID .

    $default  reduce using rule 44 (simple)


State 58

   54 expression: ID .

    $default  reduce using rule 54 (expression)


State 59

   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . SMALLER_EQUAL expression
   60                | expression . MORE_EQUAL expression
   61                | expression . '=' expression
   62                | expression . 'N' expression
   63                | expression . NOT expression
   64                | expression . AND expression
   65                | expression . OR expression

    SMALLER_EQUAL  shift, and go to state 66
    MORE_EQUAL     shift, and go to state 67
    AND            shift, and go to state 68
    OR             shift, and go to state 69
    NOT            shift, and go to state 70
    '-'            shift, and go to state 71
    '+'            shift, and go to state 72
    '*'            shift, and go to state 73
    '/'            shift, and go to state 74
    '<'            shift, and go to state 75
    '>'            shift, and go to state 76
    '='            shift, and go to state 77
    'N'            shift, and go to state 78


State 60

   53 expression: bool_expression .
   70 conditional: IF bool_expression . THEN content ELSE content END IF
   71            | IF bool_expression . THEN content END IF

    THEN  shift, and go to state 97

    $default  reduce using rule 53 (expression)


State 61

   29 content: content . content
   72 loop: LOOP content . END LOOP

    ID      shift, and go to state 13
    ARRAY   shift, and go to state 14
    BEG     shift, and go to state 15
    CONST   shift, and go to state 1
    END     shift, and go to state 98
    EXIT    shift, and go to state 16
    FALSE   shift, and go to state 17
    FOR     shift, and go to state 18
    GET     shift, and go to state 19
    IF      shift, and go to state 20
    LOOP    shift, and go to state 21
    PUT     shift, and go to state 22
    REAL    shift, and go to state 23
    RESULT  shift, and go to state 24
    RETURN  shift, and go to state 25
    SKIP    shift, and go to state 26
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    VAR     shift, and go to state 3
    '-'     shift, and go to state 29

    ID      [reduce using rule 22 (statments)]
    ID      [reduce using rule 33 (content)]
    ARRAY   [reduce using rule 22 (statments)]
    ARRAY   [reduce using rule 33 (content)]
    BEG     [reduce using rule 22 (statments)]
    BEG     [reduce using rule 33 (content)]
    CONST   [reduce using rule 22 (statments)]
    CONST   [reduce using rule 33 (content)]
    END     [reduce using rule 22 (statments)]
    END     [reduce using rule 33 (content)]
    EXIT    [reduce using rule 22 (statments)]
    EXIT    [reduce using rule 33 (content)]
    FALSE   [reduce using rule 22 (statments)]
    FALSE   [reduce using rule 33 (content)]
    FOR     [reduce using rule 22 (statments)]
    FOR     [reduce using rule 33 (content)]
    GET     [reduce using rule 22 (statments)]
    GET     [reduce using rule 33 (content)]
    IF      [reduce using rule 22 (statments)]
    IF      [reduce using rule 33 (content)]
    LOOP    [reduce using rule 22 (statments)]
    LOOP    [reduce using rule 33 (content)]
    PUT     [reduce using rule 22 (statments)]
    PUT     [reduce using rule 33 (content)]
    REAL    [reduce using rule 22 (statments)]
    REAL    [reduce using rule 33 (content)]
    RESULT  [reduce using rule 22 (statments)]
    RESULT  [reduce using rule 33 (content)]
    RETURN  [reduce using rule 22 (statments)]
    RETURN  [reduce using rule 33 (content)]
    SKIP    [reduce using rule 22 (statments)]
    SKIP    [reduce using rule 33 (content)]
    STRING  [reduce using rule 22 (statments)]
    STRING  [reduce using rule 33 (content)]
    TRUE    [reduce using rule 22 (statments)]
    TRUE    [reduce using rule 33 (content)]
    VAR     [reduce using rule 22 (statments)]
    VAR     [reduce using rule 33 (content)]
    '-'     [reduce using rule 22 (statments)]
    '-'     [reduce using rule 33 (content)]

    constants             go to state 50
    variable              go to state 51
    constant_exp          go to state 30
    statments             go to state 52
    content               go to state 93
    statment              go to state 33
    block                 go to state 34
    simple                go to state 35
    expression            go to state 36
    bool_expression       go to state 37
    function_invocation   go to state 38
    conditional           go to state 39
    loop                  go to state 40
    procedure_invacation  go to state 41


State 62

   43 simple: PUT '(' . expression ')'

    ID      shift, and go to state 58
    ARRAY   shift, and go to state 14
    FALSE   shift, and go to state 17
    REAL    shift, and go to state 23
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    constant_exp     go to state 30
    expression       go to state 99
    bool_expression  go to state 37


State 63

   46 simple: RESULT expression .
   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . SMALLER_EQUAL expression
   60                | expression . MORE_EQUAL expression
   61                | expression . '=' expression
   62                | expression . 'N' expression
   63                | expression . NOT expression
   64                | expression . AND expression
   65                | expression . OR expression

    SMALLER_EQUAL  shift, and go to state 66
    MORE_EQUAL     shift, and go to state 67
    AND            shift, and go to state 68
    OR             shift, and go to state 69
    NOT            shift, and go to state 70
    '-'            shift, and go to state 71
    '+'            shift, and go to state 72
    '*'            shift, and go to state 73
    '/'            shift, and go to state 74
    '<'            shift, and go to state 75
    '>'            shift, and go to state 76
    '='            shift, and go to state 77
    'N'            shift, and go to state 78

    '-'       [reduce using rule 46 (simple)]
    $default  reduce using rule 46 (simple)


State 64

   12 constant_exp: '-' REAL .

    $default  reduce using rule 12 (constant_exp)


State 65

   20 statments: statments . statments
   20          | statments statments .

    ID      shift, and go to state 13
    ARRAY   shift, and go to state 14
    BEG     shift, and go to state 15
    EXIT    shift, and go to state 16
    FALSE   shift, and go to state 17
    FOR     shift, and go to state 18
    GET     shift, and go to state 19
    IF      shift, and go to state 20
    LOOP    shift, and go to state 21
    PUT     shift, and go to state 22
    REAL    shift, and go to state 23
    RESULT  shift, and go to state 24
    RETURN  shift, and go to state 25
    SKIP    shift, and go to state 26
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    $end      reduce using rule 20 (statments)
    $end      [reduce using rule 22 (statments)]
    ID        [reduce using rule 20 (statments)]
    ID        [reduce using rule 22 (statments)]
    ARRAY     [reduce using rule 20 (statments)]
    ARRAY     [reduce using rule 22 (statments)]
    BEG       [reduce using rule 20 (statments)]
    BEG       [reduce using rule 22 (statments)]
    CONST     reduce using rule 20 (statments)
    CONST     [reduce using rule 22 (statments)]
    ELSE      reduce using rule 20 (statments)
    ELSE      [reduce using rule 22 (statments)]
    END       reduce using rule 20 (statments)
    END       [reduce using rule 22 (statments)]
    EXIT      [reduce using rule 20 (statments)]
    EXIT      [reduce using rule 22 (statments)]
    FALSE     [reduce using rule 20 (statments)]
    FALSE     [reduce using rule 22 (statments)]
    FOR       [reduce using rule 20 (statments)]
    FOR       [reduce using rule 22 (statments)]
    GET       [reduce using rule 20 (statments)]
    GET       [reduce using rule 22 (statments)]
    IF        [reduce using rule 20 (statments)]
    IF        [reduce using rule 22 (statments)]
    LOOP      [reduce using rule 20 (statments)]
    LOOP      [reduce using rule 22 (statments)]
    PUT       [reduce using rule 20 (statments)]
    PUT       [reduce using rule 22 (statments)]
    REAL      [reduce using rule 20 (statments)]
    REAL      [reduce using rule 22 (statments)]
    RESULT    [reduce using rule 20 (statments)]
    RESULT    [reduce using rule 22 (statments)]
    RETURN    [reduce using rule 20 (statments)]
    RETURN    [reduce using rule 22 (statments)]
    SKIP      [reduce using rule 20 (statments)]
    SKIP      [reduce using rule 22 (statments)]
    STRING    [reduce using rule 20 (statments)]
    STRING    [reduce using rule 22 (statments)]
    TRUE      [reduce using rule 20 (statments)]
    TRUE      [reduce using rule 22 (statments)]
    VAR       reduce using rule 20 (statments)
    VAR       [reduce using rule 22 (statments)]
    '-'       [reduce using rule 20 (statments)]
    '-'       [reduce using rule 22 (statments)]
    $default  reduce using rule 20 (statments)

    constant_exp          go to state 30
    statments             go to state 65
    statment              go to state 33
    block                 go to state 34
    simple                go to state 35
    expression            go to state 36
    bool_expression       go to state 37
    function_invocation   go to state 38
    conditional           go to state 39
    loop                  go to state 40
    procedure_invacation  go to state 41


State 66

   59 bool_expression: expression SMALLER_EQUAL . expression

    ID      shift, and go to state 58
    ARRAY   shift, and go to state 14
    FALSE   shift, and go to state 17
    REAL    shift, and go to state 23
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    constant_exp     go to state 30
    expression       go to state 100
    bool_expression  go to state 37


State 67

   60 bool_expression: expression MORE_EQUAL . expression

    ID      shift, and go to state 58
    ARRAY   shift, and go to state 14
    FALSE   shift, and go to state 17
    REAL    shift, and go to state 23
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    constant_exp     go to state 30
    expression       go to state 101
    bool_expression  go to state 37


State 68

   64 bool_expression: expression AND . expression

    ID      shift, and go to state 58
    ARRAY   shift, and go to state 14
    FALSE   shift, and go to state 17
    REAL    shift, and go to state 23
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    constant_exp     go to state 30
    expression       go to state 102
    bool_expression  go to state 37


State 69

   65 bool_expression: expression OR . expression

    ID      shift, and go to state 58
    ARRAY   shift, and go to state 14
    FALSE   shift, and go to state 17
    REAL    shift, and go to state 23
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    constant_exp     go to state 30
    expression       go to state 103
    bool_expression  go to state 37


State 70

   63 bool_expression: expression NOT . expression

    ID      shift, and go to state 58
    ARRAY   shift, and go to state 14
    FALSE   shift, and go to state 17
    REAL    shift, and go to state 23
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    constant_exp     go to state 30
    expression       go to state 104
    bool_expression  go to state 37


State 71

   50 expression: expression '-' . expression

    ID      shift, and go to state 58
    ARRAY   shift, and go to state 14
    FALSE   shift, and go to state 17
    REAL    shift, and go to state 23
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    constant_exp     go to state 30
    expression       go to state 105
    bool_expression  go to state 37


State 72

   49 expression: expression '+' . expression

    ID      shift, and go to state 58
    ARRAY   shift, and go to state 14
    FALSE   shift, and go to state 17
    REAL    shift, and go to state 23
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    constant_exp     go to state 30
    expression       go to state 106
    bool_expression  go to state 37


State 73

   51 expression: expression '*' . expression

    ID      shift, and go to state 58
    ARRAY   shift, and go to state 14
    FALSE   shift, and go to state 17
    REAL    shift, and go to state 23
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    constant_exp     go to state 30
    expression       go to state 107
    bool_expression  go to state 37


State 74

   52 expression: expression '/' . expression

    ID      shift, and go to state 58
    ARRAY   shift, and go to state 14
    FALSE   shift, and go to state 17
    REAL    shift, and go to state 23
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    constant_exp     go to state 30
    expression       go to state 108
    bool_expression  go to state 37


State 75

   57 bool_expression: expression '<' . expression

    ID      shift, and go to state 58
    ARRAY   shift, and go to state 14
    FALSE   shift, and go to state 17
    REAL    shift, and go to state 23
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    constant_exp     go to state 30
    expression       go to state 109
    bool_expression  go to state 37


State 76

   58 bool_expression: expression '>' . expression

    ID      shift, and go to state 58
    ARRAY   shift, and go to state 14
    FALSE   shift, and go to state 17
    REAL    shift, and go to state 23
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    constant_exp     go to state 30
    expression       go to state 110
    bool_expression  go to state 37


State 77

   61 bool_expression: expression '=' . expression

    ID      shift, and go to state 58
    ARRAY   shift, and go to state 14
    FALSE   shift, and go to state 17
    REAL    shift, and go to state 23
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    constant_exp     go to state 30
    expression       go to state 111
    bool_expression  go to state 37


State 78

   62 bool_expression: expression 'N' . expression

    ID      shift, and go to state 58
    ARRAY   shift, and go to state 14
    FALSE   shift, and go to state 17
    REAL    shift, and go to state 23
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    constant_exp     go to state 30
    expression       go to state 112
    bool_expression  go to state 37


State 79

    3 constants: CONST ID ASSIGN constant_exp .

    $default  reduce using rule 3 (constants)


State 80

    7 type: BOOL .

    $default  reduce using rule 7 (type)


State 81

    8 type: INT .

    $default  reduce using rule 8 (type)


State 82

    9 type: REAL .

    $default  reduce using rule 9 (type)


State 83

    2 constants: CONST ID ':' type . ASSIGN constant_exp

    ASSIGN  shift, and go to state 113


State 84

   24 functionVarA: ID . ':' type

    ':'  shift, and go to state 114


State 85

   23 function: FUNCTION ID '(' functionVarA . functionVarB ')' ':' type content END ID

    ','  shift, and go to state 115

    ','       [reduce using rule 28 (functionVarB)]
    $default  reduce using rule 28 (functionVarB)

    functionVarB  go to state 116


State 86

    6 variable: VAR ID ASSIGN constant_exp .

    $default  reduce using rule 6 (variable)


State 87

    4 variable: VAR ID ':' type . ASSIGN constant_exp
    5         | VAR ID ':' type .

    ASSIGN  shift, and go to state 117

    $default  reduce using rule 5 (variable)


State 88

   42 simple: ID ASSIGN expression .
   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . SMALLER_EQUAL expression
   60                | expression . MORE_EQUAL expression
   61                | expression . '=' expression
   62                | expression . 'N' expression
   63                | expression . NOT expression
   64                | expression . AND expression
   65                | expression . OR expression

    SMALLER_EQUAL  shift, and go to state 66
    MORE_EQUAL     shift, and go to state 67
    AND            shift, and go to state 68
    OR             shift, and go to state 69
    NOT            shift, and go to state 70
    '-'            shift, and go to state 71
    '+'            shift, and go to state 72
    '*'            shift, and go to state 73
    '/'            shift, and go to state 74
    '<'            shift, and go to state 75
    '>'            shift, and go to state 76
    '='            shift, and go to state 77
    'N'            shift, and go to state 78

    '-'       [reduce using rule 42 (simple)]
    $default  reduce using rule 42 (simple)


State 89

   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . SMALLER_EQUAL expression
   60                | expression . MORE_EQUAL expression
   61                | expression . '=' expression
   62                | expression . 'N' expression
   63                | expression . NOT expression
   64                | expression . AND expression
   65                | expression . OR expression
   68 functionInputA: expression .

    SMALLER_EQUAL  shift, and go to state 66
    MORE_EQUAL     shift, and go to state 67
    AND            shift, and go to state 68
    OR             shift, and go to state 69
    NOT            shift, and go to state 70
    '-'            shift, and go to state 71
    '+'            shift, and go to state 72
    '*'            shift, and go to state 73
    '/'            shift, and go to state 74
    '<'            shift, and go to state 75
    '>'            shift, and go to state 76
    '='            shift, and go to state 77
    'N'            shift, and go to state 78

    $default  reduce using rule 68 (functionInputA)


State 90

   66 function_invocation: ID '(' functionInputA . functionInputB ')'
   77 procedure_invacation: ID '(' functionInputA . functionInputB ')'

    ','  shift, and go to state 118

    functionInputB  go to state 119


State 91

   55 expression: ARRAY '[' INT . ']'

    ']'  shift, and go to state 120


State 92

   41 block: BEG content END .

    $default  reduce using rule 41 (block)


State 93

   29 content: content . content
   29        | content content .

    ID      shift, and go to state 13
    ARRAY   shift, and go to state 14
    BEG     shift, and go to state 15
    CONST   shift, and go to state 1
    EXIT    shift, and go to state 16
    FALSE   shift, and go to state 17
    FOR     shift, and go to state 18
    GET     shift, and go to state 19
    IF      shift, and go to state 20
    LOOP    shift, and go to state 21
    PUT     shift, and go to state 22
    REAL    shift, and go to state 23
    RESULT  shift, and go to state 24
    RETURN  shift, and go to state 25
    SKIP    shift, and go to state 26
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    VAR     shift, and go to state 3
    '-'     shift, and go to state 29

    ID        [reduce using rule 22 (statments)]
    ID        [reduce using rule 29 (content)]
    ID        [reduce using rule 33 (content)]
    ARRAY     [reduce using rule 22 (statments)]
    ARRAY     [reduce using rule 29 (content)]
    ARRAY     [reduce using rule 33 (content)]
    BEG       [reduce using rule 22 (statments)]
    BEG       [reduce using rule 29 (content)]
    BEG       [reduce using rule 33 (content)]
    CONST     [reduce using rule 22 (statments)]
    CONST     [reduce using rule 29 (content)]
    CONST     [reduce using rule 33 (content)]
    ELSE      reduce using rule 22 (statments)
    ELSE      [reduce using rule 29 (content)]
    ELSE      [reduce using rule 33 (content)]
    END       reduce using rule 22 (statments)
    END       [reduce using rule 29 (content)]
    END       [reduce using rule 33 (content)]
    EXIT      [reduce using rule 22 (statments)]
    EXIT      [reduce using rule 29 (content)]
    EXIT      [reduce using rule 33 (content)]
    FALSE     [reduce using rule 22 (statments)]
    FALSE     [reduce using rule 29 (content)]
    FALSE     [reduce using rule 33 (content)]
    FOR       [reduce using rule 22 (statments)]
    FOR       [reduce using rule 29 (content)]
    FOR       [reduce using rule 33 (content)]
    GET       [reduce using rule 22 (statments)]
    GET       [reduce using rule 29 (content)]
    GET       [reduce using rule 33 (content)]
    IF        [reduce using rule 22 (statments)]
    IF        [reduce using rule 29 (content)]
    IF        [reduce using rule 33 (content)]
    LOOP      [reduce using rule 22 (statments)]
    LOOP      [reduce using rule 29 (content)]
    LOOP      [reduce using rule 33 (content)]
    PUT       [reduce using rule 22 (statments)]
    PUT       [reduce using rule 29 (content)]
    PUT       [reduce using rule 33 (content)]
    REAL      [reduce using rule 22 (statments)]
    REAL      [reduce using rule 29 (content)]
    REAL      [reduce using rule 33 (content)]
    RESULT    [reduce using rule 22 (statments)]
    RESULT    [reduce using rule 29 (content)]
    RESULT    [reduce using rule 33 (content)]
    RETURN    [reduce using rule 22 (statments)]
    RETURN    [reduce using rule 29 (content)]
    RETURN    [reduce using rule 33 (content)]
    SKIP      [reduce using rule 22 (statments)]
    SKIP      [reduce using rule 29 (content)]
    SKIP      [reduce using rule 33 (content)]
    STRING    [reduce using rule 22 (statments)]
    STRING    [reduce using rule 29 (content)]
    STRING    [reduce using rule 33 (content)]
    TRUE      [reduce using rule 22 (statments)]
    TRUE      [reduce using rule 29 (content)]
    TRUE      [reduce using rule 33 (content)]
    VAR       [reduce using rule 22 (statments)]
    VAR       [reduce using rule 29 (content)]
    VAR       [reduce using rule 33 (content)]
    '-'       [reduce using rule 22 (statments)]
    '-'       [reduce using rule 29 (content)]
    '-'       [reduce using rule 33 (content)]
    $default  reduce using rule 22 (statments)

    constants             go to state 50
    variable              go to state 51
    constant_exp          go to state 30
    statments             go to state 52
    content               go to state 93
    statment              go to state 33
    block                 go to state 34
    simple                go to state 35
    expression            go to state 36
    bool_expression       go to state 37
    function_invocation   go to state 38
    conditional           go to state 39
    loop                  go to state 40
    procedure_invacation  go to state 41


State 94

   47 simple: EXIT WHEN bool_expression .
   53 expression: bool_expression .

    SMALLER_EQUAL  reduce using rule 53 (expression)
    MORE_EQUAL     reduce using rule 53 (expression)
    AND            reduce using rule 53 (expression)
    OR             reduce using rule 53 (expression)
    NOT            reduce using rule 53 (expression)
    '-'            reduce using rule 47 (simple)
    '-'            [reduce using rule 53 (expression)]
    '+'            reduce using rule 53 (expression)
    '*'            reduce using rule 53 (expression)
    '/'            reduce using rule 53 (expression)
    '<'            reduce using rule 53 (expression)
    '>'            reduce using rule 53 (expression)
    '='            reduce using rule 53 (expression)
    'N'            reduce using rule 53 (expression)
    $default       reduce using rule 47 (simple)


State 95

   73 loop: FOR ID ':' . const_exp '.' '.' constant_exp content END FOR

    ID   shift, and go to state 121
    INT  shift, and go to state 122

    const_exp  go to state 123


State 96

   74 loop: FOR DECREASING ID . ':' const_exp '.' '.' constant_exp content END FOR

    ':'  shift, and go to state 124


State 97

   70 conditional: IF bool_expression THEN . content ELSE content END IF
   71            | IF bool_expression THEN . content END IF

    ID      shift, and go to state 13
    ARRAY   shift, and go to state 14
    BEG     shift, and go to state 15
    CONST   shift, and go to state 1
    EXIT    shift, and go to state 16
    FALSE   shift, and go to state 17
    FOR     shift, and go to state 18
    GET     shift, and go to state 19
    IF      shift, and go to state 20
    LOOP    shift, and go to state 21
    PUT     shift, and go to state 22
    REAL    shift, and go to state 23
    RESULT  shift, and go to state 24
    RETURN  shift, and go to state 25
    SKIP    shift, and go to state 26
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    VAR     shift, and go to state 3
    '-'     shift, and go to state 29

    ID        [reduce using rule 22 (statments)]
    ID        [reduce using rule 33 (content)]
    ARRAY     [reduce using rule 22 (statments)]
    ARRAY     [reduce using rule 33 (content)]
    BEG       [reduce using rule 22 (statments)]
    BEG       [reduce using rule 33 (content)]
    CONST     [reduce using rule 22 (statments)]
    CONST     [reduce using rule 33 (content)]
    ELSE      reduce using rule 22 (statments)
    ELSE      [reduce using rule 33 (content)]
    END       reduce using rule 22 (statments)
    END       [reduce using rule 33 (content)]
    EXIT      [reduce using rule 22 (statments)]
    EXIT      [reduce using rule 33 (content)]
    FALSE     [reduce using rule 22 (statments)]
    FALSE     [reduce using rule 33 (content)]
    FOR       [reduce using rule 22 (statments)]
    FOR       [reduce using rule 33 (content)]
    GET       [reduce using rule 22 (statments)]
    GET       [reduce using rule 33 (content)]
    IF        [reduce using rule 22 (statments)]
    IF        [reduce using rule 33 (content)]
    LOOP      [reduce using rule 22 (statments)]
    LOOP      [reduce using rule 33 (content)]
    PUT       [reduce using rule 22 (statments)]
    PUT       [reduce using rule 33 (content)]
    REAL      [reduce using rule 22 (statments)]
    REAL      [reduce using rule 33 (content)]
    RESULT    [reduce using rule 22 (statments)]
    RESULT    [reduce using rule 33 (content)]
    RETURN    [reduce using rule 22 (statments)]
    RETURN    [reduce using rule 33 (content)]
    SKIP      [reduce using rule 22 (statments)]
    SKIP      [reduce using rule 33 (content)]
    STRING    [reduce using rule 22 (statments)]
    STRING    [reduce using rule 33 (content)]
    TRUE      [reduce using rule 22 (statments)]
    TRUE      [reduce using rule 33 (content)]
    VAR       [reduce using rule 22 (statments)]
    VAR       [reduce using rule 33 (content)]
    '-'       [reduce using rule 22 (statments)]
    '-'       [reduce using rule 33 (content)]
    $default  reduce using rule 22 (statments)

    constants             go to state 50
    variable              go to state 51
    constant_exp          go to state 30
    statments             go to state 52
    content               go to state 125
    statment              go to state 33
    block                 go to state 34
    simple                go to state 35
    expression            go to state 36
    bool_expression       go to state 37
    function_invocation   go to state 38
    conditional           go to state 39
    loop                  go to state 40
    procedure_invacation  go to state 41


State 98

   72 loop: LOOP content END . LOOP

    LOOP  shift, and go to state 126


State 99

   43 simple: PUT '(' expression . ')'
   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . SMALLER_EQUAL expression
   60                | expression . MORE_EQUAL expression
   61                | expression . '=' expression
   62                | expression . 'N' expression
   63                | expression . NOT expression
   64                | expression . AND expression
   65                | expression . OR expression

    SMALLER_EQUAL  shift, and go to state 66
    MORE_EQUAL     shift, and go to state 67
    AND            shift, and go to state 68
    OR             shift, and go to state 69
    NOT            shift, and go to state 70
    '-'            shift, and go to state 71
    ')'            shift, and go to state 127
    '+'            shift, and go to state 72
    '*'            shift, and go to state 73
    '/'            shift, and go to state 74
    '<'            shift, and go to state 75
    '>'            shift, and go to state 76
    '='            shift, and go to state 77
    'N'            shift, and go to state 78


State 100

   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . SMALLER_EQUAL expression
   59                | expression SMALLER_EQUAL expression .
   60                | expression . MORE_EQUAL expression
   61                | expression . '=' expression
   62                | expression . 'N' expression
   63                | expression . NOT expression
   64                | expression . AND expression
   65                | expression . OR expression

    SMALLER_EQUAL  shift, and go to state 66
    MORE_EQUAL     shift, and go to state 67
    AND            shift, and go to state 68
    OR             shift, and go to state 69
    NOT            shift, and go to state 70
    '-'            shift, and go to state 71
    '+'            shift, and go to state 72
    '*'            shift, and go to state 73
    '/'            shift, and go to state 74
    '<'            shift, and go to state 75
    '>'            shift, and go to state 76
    '='            shift, and go to state 77
    'N'            shift, and go to state 78

    SMALLER_EQUAL  [reduce using rule 59 (bool_expression)]
    MORE_EQUAL     [reduce using rule 59 (bool_expression)]
    AND            [reduce using rule 59 (bool_expression)]
    OR             [reduce using rule 59 (bool_expression)]
    NOT            [reduce using rule 59 (bool_expression)]
    '-'            [reduce using rule 59 (bool_expression)]
    '+'            [reduce using rule 59 (bool_expression)]
    '*'            [reduce using rule 59 (bool_expression)]
    '/'            [reduce using rule 59 (bool_expression)]
    '<'            [reduce using rule 59 (bool_expression)]
    '>'            [reduce using rule 59 (bool_expression)]
    '='            [reduce using rule 59 (bool_expression)]
    'N'            [reduce using rule 59 (bool_expression)]
    $default       reduce using rule 59 (bool_expression)


State 101

   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . SMALLER_EQUAL expression
   60                | expression . MORE_EQUAL expression
   60                | expression MORE_EQUAL expression .
   61                | expression . '=' expression
   62                | expression . 'N' expression
   63                | expression . NOT expression
   64                | expression . AND expression
   65                | expression . OR expression

    SMALLER_EQUAL  shift, and go to state 66
    MORE_EQUAL     shift, and go to state 67
    AND            shift, and go to state 68
    OR             shift, and go to state 69
    NOT            shift, and go to state 70
    '-'            shift, and go to state 71
    '+'            shift, and go to state 72
    '*'            shift, and go to state 73
    '/'            shift, and go to state 74
    '<'            shift, and go to state 75
    '>'            shift, and go to state 76
    '='            shift, and go to state 77
    'N'            shift, and go to state 78

    SMALLER_EQUAL  [reduce using rule 60 (bool_expression)]
    MORE_EQUAL     [reduce using rule 60 (bool_expression)]
    AND            [reduce using rule 60 (bool_expression)]
    OR             [reduce using rule 60 (bool_expression)]
    NOT            [reduce using rule 60 (bool_expression)]
    '-'            [reduce using rule 60 (bool_expression)]
    '+'            [reduce using rule 60 (bool_expression)]
    '*'            [reduce using rule 60 (bool_expression)]
    '/'            [reduce using rule 60 (bool_expression)]
    '<'            [reduce using rule 60 (bool_expression)]
    '>'            [reduce using rule 60 (bool_expression)]
    '='            [reduce using rule 60 (bool_expression)]
    'N'            [reduce using rule 60 (bool_expression)]
    $default       reduce using rule 60 (bool_expression)


State 102

   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . SMALLER_EQUAL expression
   60                | expression . MORE_EQUAL expression
   61                | expression . '=' expression
   62                | expression . 'N' expression
   63                | expression . NOT expression
   64                | expression . AND expression
   64                | expression AND expression .
   65                | expression . OR expression

    SMALLER_EQUAL  shift, and go to state 66
    MORE_EQUAL     shift, and go to state 67
    AND            shift, and go to state 68
    OR             shift, and go to state 69
    NOT            shift, and go to state 70
    '-'            shift, and go to state 71
    '+'            shift, and go to state 72
    '*'            shift, and go to state 73
    '/'            shift, and go to state 74
    '<'            shift, and go to state 75
    '>'            shift, and go to state 76
    '='            shift, and go to state 77
    'N'            shift, and go to state 78

    SMALLER_EQUAL  [reduce using rule 64 (bool_expression)]
    MORE_EQUAL     [reduce using rule 64 (bool_expression)]
    AND            [reduce using rule 64 (bool_expression)]
    OR             [reduce using rule 64 (bool_expression)]
    NOT            [reduce using rule 64 (bool_expression)]
    '-'            [reduce using rule 64 (bool_expression)]
    '+'            [reduce using rule 64 (bool_expression)]
    '*'            [reduce using rule 64 (bool_expression)]
    '/'            [reduce using rule 64 (bool_expression)]
    '<'            [reduce using rule 64 (bool_expression)]
    '>'            [reduce using rule 64 (bool_expression)]
    '='            [reduce using rule 64 (bool_expression)]
    'N'            [reduce using rule 64 (bool_expression)]
    $default       reduce using rule 64 (bool_expression)


State 103

   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . SMALLER_EQUAL expression
   60                | expression . MORE_EQUAL expression
   61                | expression . '=' expression
   62                | expression . 'N' expression
   63                | expression . NOT expression
   64                | expression . AND expression
   65                | expression . OR expression
   65                | expression OR expression .

    SMALLER_EQUAL  shift, and go to state 66
    MORE_EQUAL     shift, and go to state 67
    AND            shift, and go to state 68
    OR             shift, and go to state 69
    NOT            shift, and go to state 70
    '-'            shift, and go to state 71
    '+'            shift, and go to state 72
    '*'            shift, and go to state 73
    '/'            shift, and go to state 74
    '<'            shift, and go to state 75
    '>'            shift, and go to state 76
    '='            shift, and go to state 77
    'N'            shift, and go to state 78

    SMALLER_EQUAL  [reduce using rule 65 (bool_expression)]
    MORE_EQUAL     [reduce using rule 65 (bool_expression)]
    AND            [reduce using rule 65 (bool_expression)]
    OR             [reduce using rule 65 (bool_expression)]
    NOT            [reduce using rule 65 (bool_expression)]
    '-'            [reduce using rule 65 (bool_expression)]
    '+'            [reduce using rule 65 (bool_expression)]
    '*'            [reduce using rule 65 (bool_expression)]
    '/'            [reduce using rule 65 (bool_expression)]
    '<'            [reduce using rule 65 (bool_expression)]
    '>'            [reduce using rule 65 (bool_expression)]
    '='            [reduce using rule 65 (bool_expression)]
    'N'            [reduce using rule 65 (bool_expression)]
    $default       reduce using rule 65 (bool_expression)


State 104

   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . SMALLER_EQUAL expression
   60                | expression . MORE_EQUAL expression
   61                | expression . '=' expression
   62                | expression . 'N' expression
   63                | expression . NOT expression
   63                | expression NOT expression .
   64                | expression . AND expression
   65                | expression . OR expression

    SMALLER_EQUAL  shift, and go to state 66
    MORE_EQUAL     shift, and go to state 67
    AND            shift, and go to state 68
    OR             shift, and go to state 69
    NOT            shift, and go to state 70
    '-'            shift, and go to state 71
    '+'            shift, and go to state 72
    '*'            shift, and go to state 73
    '/'            shift, and go to state 74
    '<'            shift, and go to state 75
    '>'            shift, and go to state 76
    '='            shift, and go to state 77
    'N'            shift, and go to state 78

    SMALLER_EQUAL  [reduce using rule 63 (bool_expression)]
    MORE_EQUAL     [reduce using rule 63 (bool_expression)]
    AND            [reduce using rule 63 (bool_expression)]
    OR             [reduce using rule 63 (bool_expression)]
    NOT            [reduce using rule 63 (bool_expression)]
    '-'            [reduce using rule 63 (bool_expression)]
    '+'            [reduce using rule 63 (bool_expression)]
    '*'            [reduce using rule 63 (bool_expression)]
    '/'            [reduce using rule 63 (bool_expression)]
    '<'            [reduce using rule 63 (bool_expression)]
    '>'            [reduce using rule 63 (bool_expression)]
    '='            [reduce using rule 63 (bool_expression)]
    'N'            [reduce using rule 63 (bool_expression)]
    $default       reduce using rule 63 (bool_expression)


State 105

   49 expression: expression . '+' expression
   50           | expression . '-' expression
   50           | expression '-' expression .
   51           | expression . '*' expression
   52           | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . SMALLER_EQUAL expression
   60                | expression . MORE_EQUAL expression
   61                | expression . '=' expression
   62                | expression . 'N' expression
   63                | expression . NOT expression
   64                | expression . AND expression
   65                | expression . OR expression

    SMALLER_EQUAL  shift, and go to state 66
    MORE_EQUAL     shift, and go to state 67
    AND            shift, and go to state 68
    OR             shift, and go to state 69
    NOT            shift, and go to state 70
    '-'            shift, and go to state 71
    '+'            shift, and go to state 72
    '*'            shift, and go to state 73
    '/'            shift, and go to state 74
    '<'            shift, and go to state 75
    '>'            shift, and go to state 76
    '='            shift, and go to state 77
    'N'            shift, and go to state 78

    SMALLER_EQUAL  [reduce using rule 50 (expression)]
    MORE_EQUAL     [reduce using rule 50 (expression)]
    AND            [reduce using rule 50 (expression)]
    OR             [reduce using rule 50 (expression)]
    NOT            [reduce using rule 50 (expression)]
    '-'            [reduce using rule 50 (expression)]
    '+'            [reduce using rule 50 (expression)]
    '*'            [reduce using rule 50 (expression)]
    '/'            [reduce using rule 50 (expression)]
    '<'            [reduce using rule 50 (expression)]
    '>'            [reduce using rule 50 (expression)]
    '='            [reduce using rule 50 (expression)]
    'N'            [reduce using rule 50 (expression)]
    $default       reduce using rule 50 (expression)


State 106

   49 expression: expression . '+' expression
   49           | expression '+' expression .
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . SMALLER_EQUAL expression
   60                | expression . MORE_EQUAL expression
   61                | expression . '=' expression
   62                | expression . 'N' expression
   63                | expression . NOT expression
   64                | expression . AND expression
   65                | expression . OR expression

    SMALLER_EQUAL  shift, and go to state 66
    MORE_EQUAL     shift, and go to state 67
    AND            shift, and go to state 68
    OR             shift, and go to state 69
    NOT            shift, and go to state 70
    '-'            shift, and go to state 71
    '+'            shift, and go to state 72
    '*'            shift, and go to state 73
    '/'            shift, and go to state 74
    '<'            shift, and go to state 75
    '>'            shift, and go to state 76
    '='            shift, and go to state 77
    'N'            shift, and go to state 78

    SMALLER_EQUAL  [reduce using rule 49 (expression)]
    MORE_EQUAL     [reduce using rule 49 (expression)]
    AND            [reduce using rule 49 (expression)]
    OR             [reduce using rule 49 (expression)]
    NOT            [reduce using rule 49 (expression)]
    '-'            [reduce using rule 49 (expression)]
    '+'            [reduce using rule 49 (expression)]
    '*'            [reduce using rule 49 (expression)]
    '/'            [reduce using rule 49 (expression)]
    '<'            [reduce using rule 49 (expression)]
    '>'            [reduce using rule 49 (expression)]
    '='            [reduce using rule 49 (expression)]
    'N'            [reduce using rule 49 (expression)]
    $default       reduce using rule 49 (expression)


State 107

   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   51           | expression '*' expression .
   52           | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . SMALLER_EQUAL expression
   60                | expression . MORE_EQUAL expression
   61                | expression . '=' expression
   62                | expression . 'N' expression
   63                | expression . NOT expression
   64                | expression . AND expression
   65                | expression . OR expression

    SMALLER_EQUAL  shift, and go to state 66
    MORE_EQUAL     shift, and go to state 67
    AND            shift, and go to state 68
    OR             shift, and go to state 69
    NOT            shift, and go to state 70
    '-'            shift, and go to state 71
    '+'            shift, and go to state 72
    '*'            shift, and go to state 73
    '/'            shift, and go to state 74
    '<'            shift, and go to state 75
    '>'            shift, and go to state 76
    '='            shift, and go to state 77
    'N'            shift, and go to state 78

    SMALLER_EQUAL  [reduce using rule 51 (expression)]
    MORE_EQUAL     [reduce using rule 51 (expression)]
    AND            [reduce using rule 51 (expression)]
    OR             [reduce using rule 51 (expression)]
    NOT            [reduce using rule 51 (expression)]
    '-'            [reduce using rule 51 (expression)]
    '+'            [reduce using rule 51 (expression)]
    '*'            [reduce using rule 51 (expression)]
    '/'            [reduce using rule 51 (expression)]
    '<'            [reduce using rule 51 (expression)]
    '>'            [reduce using rule 51 (expression)]
    '='            [reduce using rule 51 (expression)]
    'N'            [reduce using rule 51 (expression)]
    $default       reduce using rule 51 (expression)


State 108

   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression
   52           | expression '/' expression .
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . SMALLER_EQUAL expression
   60                | expression . MORE_EQUAL expression
   61                | expression . '=' expression
   62                | expression . 'N' expression
   63                | expression . NOT expression
   64                | expression . AND expression
   65                | expression . OR expression

    SMALLER_EQUAL  shift, and go to state 66
    MORE_EQUAL     shift, and go to state 67
    AND            shift, and go to state 68
    OR             shift, and go to state 69
    NOT            shift, and go to state 70
    '-'            shift, and go to state 71
    '+'            shift, and go to state 72
    '*'            shift, and go to state 73
    '/'            shift, and go to state 74
    '<'            shift, and go to state 75
    '>'            shift, and go to state 76
    '='            shift, and go to state 77
    'N'            shift, and go to state 78

    SMALLER_EQUAL  [reduce using rule 52 (expression)]
    MORE_EQUAL     [reduce using rule 52 (expression)]
    AND            [reduce using rule 52 (expression)]
    OR             [reduce using rule 52 (expression)]
    NOT            [reduce using rule 52 (expression)]
    '-'            [reduce using rule 52 (expression)]
    '+'            [reduce using rule 52 (expression)]
    '*'            [reduce using rule 52 (expression)]
    '/'            [reduce using rule 52 (expression)]
    '<'            [reduce using rule 52 (expression)]
    '>'            [reduce using rule 52 (expression)]
    '='            [reduce using rule 52 (expression)]
    'N'            [reduce using rule 52 (expression)]
    $default       reduce using rule 52 (expression)


State 109

   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression
   57 bool_expression: expression . '<' expression
   57                | expression '<' expression .
   58                | expression . '>' expression
   59                | expression . SMALLER_EQUAL expression
   60                | expression . MORE_EQUAL expression
   61                | expression . '=' expression
   62                | expression . 'N' expression
   63                | expression . NOT expression
   64                | expression . AND expression
   65                | expression . OR expression

    SMALLER_EQUAL  shift, and go to state 66
    MORE_EQUAL     shift, and go to state 67
    AND            shift, and go to state 68
    OR             shift, and go to state 69
    NOT            shift, and go to state 70
    '-'            shift, and go to state 71
    '+'            shift, and go to state 72
    '*'            shift, and go to state 73
    '/'            shift, and go to state 74
    '<'            shift, and go to state 75
    '>'            shift, and go to state 76
    '='            shift, and go to state 77
    'N'            shift, and go to state 78

    SMALLER_EQUAL  [reduce using rule 57 (bool_expression)]
    MORE_EQUAL     [reduce using rule 57 (bool_expression)]
    AND            [reduce using rule 57 (bool_expression)]
    OR             [reduce using rule 57 (bool_expression)]
    NOT            [reduce using rule 57 (bool_expression)]
    '-'            [reduce using rule 57 (bool_expression)]
    '+'            [reduce using rule 57 (bool_expression)]
    '*'            [reduce using rule 57 (bool_expression)]
    '/'            [reduce using rule 57 (bool_expression)]
    '<'            [reduce using rule 57 (bool_expression)]
    '>'            [reduce using rule 57 (bool_expression)]
    '='            [reduce using rule 57 (bool_expression)]
    'N'            [reduce using rule 57 (bool_expression)]
    $default       reduce using rule 57 (bool_expression)


State 110

   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   58                | expression '>' expression .
   59                | expression . SMALLER_EQUAL expression
   60                | expression . MORE_EQUAL expression
   61                | expression . '=' expression
   62                | expression . 'N' expression
   63                | expression . NOT expression
   64                | expression . AND expression
   65                | expression . OR expression

    SMALLER_EQUAL  shift, and go to state 66
    MORE_EQUAL     shift, and go to state 67
    AND            shift, and go to state 68
    OR             shift, and go to state 69
    NOT            shift, and go to state 70
    '-'            shift, and go to state 71
    '+'            shift, and go to state 72
    '*'            shift, and go to state 73
    '/'            shift, and go to state 74
    '<'            shift, and go to state 75
    '>'            shift, and go to state 76
    '='            shift, and go to state 77
    'N'            shift, and go to state 78

    SMALLER_EQUAL  [reduce using rule 58 (bool_expression)]
    MORE_EQUAL     [reduce using rule 58 (bool_expression)]
    AND            [reduce using rule 58 (bool_expression)]
    OR             [reduce using rule 58 (bool_expression)]
    NOT            [reduce using rule 58 (bool_expression)]
    '-'            [reduce using rule 58 (bool_expression)]
    '+'            [reduce using rule 58 (bool_expression)]
    '*'            [reduce using rule 58 (bool_expression)]
    '/'            [reduce using rule 58 (bool_expression)]
    '<'            [reduce using rule 58 (bool_expression)]
    '>'            [reduce using rule 58 (bool_expression)]
    '='            [reduce using rule 58 (bool_expression)]
    'N'            [reduce using rule 58 (bool_expression)]
    $default       reduce using rule 58 (bool_expression)


State 111

   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . SMALLER_EQUAL expression
   60                | expression . MORE_EQUAL expression
   61                | expression . '=' expression
   61                | expression '=' expression .
   62                | expression . 'N' expression
   63                | expression . NOT expression
   64                | expression . AND expression
   65                | expression . OR expression

    SMALLER_EQUAL  shift, and go to state 66
    MORE_EQUAL     shift, and go to state 67
    AND            shift, and go to state 68
    OR             shift, and go to state 69
    NOT            shift, and go to state 70
    '-'            shift, and go to state 71
    '+'            shift, and go to state 72
    '*'            shift, and go to state 73
    '/'            shift, and go to state 74
    '<'            shift, and go to state 75
    '>'            shift, and go to state 76
    '='            shift, and go to state 77
    'N'            shift, and go to state 78

    SMALLER_EQUAL  [reduce using rule 61 (bool_expression)]
    MORE_EQUAL     [reduce using rule 61 (bool_expression)]
    AND            [reduce using rule 61 (bool_expression)]
    OR             [reduce using rule 61 (bool_expression)]
    NOT            [reduce using rule 61 (bool_expression)]
    '-'            [reduce using rule 61 (bool_expression)]
    '+'            [reduce using rule 61 (bool_expression)]
    '*'            [reduce using rule 61 (bool_expression)]
    '/'            [reduce using rule 61 (bool_expression)]
    '<'            [reduce using rule 61 (bool_expression)]
    '>'            [reduce using rule 61 (bool_expression)]
    '='            [reduce using rule 61 (bool_expression)]
    'N'            [reduce using rule 61 (bool_expression)]
    $default       reduce using rule 61 (bool_expression)


State 112

   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . SMALLER_EQUAL expression
   60                | expression . MORE_EQUAL expression
   61                | expression . '=' expression
   62                | expression . 'N' expression
   62                | expression 'N' expression .
   63                | expression . NOT expression
   64                | expression . AND expression
   65                | expression . OR expression

    SMALLER_EQUAL  shift, and go to state 66
    MORE_EQUAL     shift, and go to state 67
    AND            shift, and go to state 68
    OR             shift, and go to state 69
    NOT            shift, and go to state 70
    '-'            shift, and go to state 71
    '+'            shift, and go to state 72
    '*'            shift, and go to state 73
    '/'            shift, and go to state 74
    '<'            shift, and go to state 75
    '>'            shift, and go to state 76
    '='            shift, and go to state 77
    'N'            shift, and go to state 78

    SMALLER_EQUAL  [reduce using rule 62 (bool_expression)]
    MORE_EQUAL     [reduce using rule 62 (bool_expression)]
    AND            [reduce using rule 62 (bool_expression)]
    OR             [reduce using rule 62 (bool_expression)]
    NOT            [reduce using rule 62 (bool_expression)]
    '-'            [reduce using rule 62 (bool_expression)]
    '+'            [reduce using rule 62 (bool_expression)]
    '*'            [reduce using rule 62 (bool_expression)]
    '/'            [reduce using rule 62 (bool_expression)]
    '<'            [reduce using rule 62 (bool_expression)]
    '>'            [reduce using rule 62 (bool_expression)]
    '='            [reduce using rule 62 (bool_expression)]
    'N'            [reduce using rule 62 (bool_expression)]
    $default       reduce using rule 62 (bool_expression)


State 113

    2 constants: CONST ID ':' type ASSIGN . constant_exp

    FALSE   shift, and go to state 17
    REAL    shift, and go to state 23
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    constant_exp  go to state 128


State 114

   24 functionVarA: ID ':' . type

    BOOL  shift, and go to state 80
    INT   shift, and go to state 81
    REAL  shift, and go to state 82

    type  go to state 129


State 115

   26 functionVarB: ',' . ID ':' type

    ID  shift, and go to state 130


State 116

   23 function: FUNCTION ID '(' functionVarA functionVarB . ')' ':' type content END ID
   27 functionVarB: functionVarB . functionVarB

    ')'  shift, and go to state 131
    ','  shift, and go to state 115

    ')'  [reduce using rule 28 (functionVarB)]
    ','  [reduce using rule 28 (functionVarB)]

    functionVarB  go to state 132


State 117

    4 variable: VAR ID ':' type ASSIGN . constant_exp

    FALSE   shift, and go to state 17
    REAL    shift, and go to state 23
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    constant_exp  go to state 133


State 118

   69 functionInputB: ',' . expression

    ID      shift, and go to state 58
    ARRAY   shift, and go to state 14
    FALSE   shift, and go to state 17
    REAL    shift, and go to state 23
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    constant_exp     go to state 30
    expression       go to state 134
    bool_expression  go to state 37


State 119

   66 function_invocation: ID '(' functionInputA functionInputB . ')'
   77 procedure_invacation: ID '(' functionInputA functionInputB . ')'

    ')'  shift, and go to state 135


State 120

   55 expression: ARRAY '[' INT ']' .

    $default  reduce using rule 55 (expression)


State 121

   76 const_exp: ID .

    $default  reduce using rule 76 (const_exp)


State 122

   75 const_exp: INT .

    $default  reduce using rule 75 (const_exp)


State 123

   73 loop: FOR ID ':' const_exp . '.' '.' constant_exp content END FOR

    '.'  shift, and go to state 136


State 124

   74 loop: FOR DECREASING ID ':' . const_exp '.' '.' constant_exp content END FOR

    ID   shift, and go to state 121
    INT  shift, and go to state 122

    const_exp  go to state 137


State 125

   29 content: content . content
   70 conditional: IF bool_expression THEN content . ELSE content END IF
   71            | IF bool_expression THEN content . END IF

    ID      shift, and go to state 13
    ARRAY   shift, and go to state 14
    BEG     shift, and go to state 15
    CONST   shift, and go to state 1
    ELSE    shift, and go to state 138
    END     shift, and go to state 139
    EXIT    shift, and go to state 16
    FALSE   shift, and go to state 17
    FOR     shift, and go to state 18
    GET     shift, and go to state 19
    IF      shift, and go to state 20
    LOOP    shift, and go to state 21
    PUT     shift, and go to state 22
    REAL    shift, and go to state 23
    RESULT  shift, and go to state 24
    RETURN  shift, and go to state 25
    SKIP    shift, and go to state 26
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    VAR     shift, and go to state 3
    '-'     shift, and go to state 29

    ID      [reduce using rule 22 (statments)]
    ID      [reduce using rule 33 (content)]
    ARRAY   [reduce using rule 22 (statments)]
    ARRAY   [reduce using rule 33 (content)]
    BEG     [reduce using rule 22 (statments)]
    BEG     [reduce using rule 33 (content)]
    CONST   [reduce using rule 22 (statments)]
    CONST   [reduce using rule 33 (content)]
    ELSE    [reduce using rule 22 (statments)]
    ELSE    [reduce using rule 33 (content)]
    END     [reduce using rule 22 (statments)]
    END     [reduce using rule 33 (content)]
    EXIT    [reduce using rule 22 (statments)]
    EXIT    [reduce using rule 33 (content)]
    FALSE   [reduce using rule 22 (statments)]
    FALSE   [reduce using rule 33 (content)]
    FOR     [reduce using rule 22 (statments)]
    FOR     [reduce using rule 33 (content)]
    GET     [reduce using rule 22 (statments)]
    GET     [reduce using rule 33 (content)]
    IF      [reduce using rule 22 (statments)]
    IF      [reduce using rule 33 (content)]
    LOOP    [reduce using rule 22 (statments)]
    LOOP    [reduce using rule 33 (content)]
    PUT     [reduce using rule 22 (statments)]
    PUT     [reduce using rule 33 (content)]
    REAL    [reduce using rule 22 (statments)]
    REAL    [reduce using rule 33 (content)]
    RESULT  [reduce using rule 22 (statments)]
    RESULT  [reduce using rule 33 (content)]
    RETURN  [reduce using rule 22 (statments)]
    RETURN  [reduce using rule 33 (content)]
    SKIP    [reduce using rule 22 (statments)]
    SKIP    [reduce using rule 33 (content)]
    STRING  [reduce using rule 22 (statments)]
    STRING  [reduce using rule 33 (content)]
    TRUE    [reduce using rule 22 (statments)]
    TRUE    [reduce using rule 33 (content)]
    VAR     [reduce using rule 22 (statments)]
    VAR     [reduce using rule 33 (content)]
    '-'     [reduce using rule 22 (statments)]
    '-'     [reduce using rule 33 (content)]

    constants             go to state 50
    variable              go to state 51
    constant_exp          go to state 30
    statments             go to state 52
    content               go to state 93
    statment              go to state 33
    block                 go to state 34
    simple                go to state 35
    expression            go to state 36
    bool_expression       go to state 37
    function_invocation   go to state 38
    conditional           go to state 39
    loop                  go to state 40
    procedure_invacation  go to state 41


State 126

   72 loop: LOOP content END LOOP .

    $default  reduce using rule 72 (loop)


State 127

   43 simple: PUT '(' expression ')' .

    $default  reduce using rule 43 (simple)


State 128

    2 constants: CONST ID ':' type ASSIGN constant_exp .

    $default  reduce using rule 2 (constants)


State 129

   24 functionVarA: ID ':' type .

    $default  reduce using rule 24 (functionVarA)


State 130

   26 functionVarB: ',' ID . ':' type

    ':'  shift, and go to state 140


State 131

   23 function: FUNCTION ID '(' functionVarA functionVarB ')' . ':' type content END ID

    ':'  shift, and go to state 141


State 132

   27 functionVarB: functionVarB . functionVarB
   27             | functionVarB functionVarB .

    ','  shift, and go to state 115

    ')'       reduce using rule 27 (functionVarB)
    ')'       [reduce using rule 28 (functionVarB)]
    ','       [reduce using rule 27 (functionVarB)]
    ','       [reduce using rule 28 (functionVarB)]
    $default  reduce using rule 27 (functionVarB)

    functionVarB  go to state 132


State 133

    4 variable: VAR ID ':' type ASSIGN constant_exp .

    $default  reduce using rule 4 (variable)


State 134

   49 expression: expression . '+' expression
   50           | expression . '-' expression
   51           | expression . '*' expression
   52           | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . SMALLER_EQUAL expression
   60                | expression . MORE_EQUAL expression
   61                | expression . '=' expression
   62                | expression . 'N' expression
   63                | expression . NOT expression
   64                | expression . AND expression
   65                | expression . OR expression
   69 functionInputB: ',' expression .

    SMALLER_EQUAL  shift, and go to state 66
    MORE_EQUAL     shift, and go to state 67
    AND            shift, and go to state 68
    OR             shift, and go to state 69
    NOT            shift, and go to state 70
    '-'            shift, and go to state 71
    '+'            shift, and go to state 72
    '*'            shift, and go to state 73
    '/'            shift, and go to state 74
    '<'            shift, and go to state 75
    '>'            shift, and go to state 76
    '='            shift, and go to state 77
    'N'            shift, and go to state 78

    $default  reduce using rule 69 (functionInputB)


State 135

   66 function_invocation: ID '(' functionInputA functionInputB ')' .
   77 procedure_invacation: ID '(' functionInputA functionInputB ')' .

    $end      reduce using rule 66 (function_invocation)
    $end      [reduce using rule 77 (procedure_invacation)]
    ID        reduce using rule 66 (function_invocation)
    ID        [reduce using rule 77 (procedure_invacation)]
    ARRAY     reduce using rule 66 (function_invocation)
    ARRAY     [reduce using rule 77 (procedure_invacation)]
    BEG       reduce using rule 66 (function_invocation)
    BEG       [reduce using rule 77 (procedure_invacation)]
    CONST     reduce using rule 66 (function_invocation)
    CONST     [reduce using rule 77 (procedure_invacation)]
    ELSE      reduce using rule 66 (function_invocation)
    ELSE      [reduce using rule 77 (procedure_invacation)]
    END       reduce using rule 66 (function_invocation)
    END       [reduce using rule 77 (procedure_invacation)]
    EXIT      reduce using rule 66 (function_invocation)
    EXIT      [reduce using rule 77 (procedure_invacation)]
    FALSE     reduce using rule 66 (function_invocation)
    FALSE     [reduce using rule 77 (procedure_invacation)]
    FOR       reduce using rule 66 (function_invocation)
    FOR       [reduce using rule 77 (procedure_invacation)]
    GET       reduce using rule 66 (function_invocation)
    GET       [reduce using rule 77 (procedure_invacation)]
    IF        reduce using rule 66 (function_invocation)
    IF        [reduce using rule 77 (procedure_invacation)]
    LOOP      reduce using rule 66 (function_invocation)
    LOOP      [reduce using rule 77 (procedure_invacation)]
    PUT       reduce using rule 66 (function_invocation)
    PUT       [reduce using rule 77 (procedure_invacation)]
    REAL      reduce using rule 66 (function_invocation)
    REAL      [reduce using rule 77 (procedure_invacation)]
    RESULT    reduce using rule 66 (function_invocation)
    RESULT    [reduce using rule 77 (procedure_invacation)]
    RETURN    reduce using rule 66 (function_invocation)
    RETURN    [reduce using rule 77 (procedure_invacation)]
    SKIP      reduce using rule 66 (function_invocation)
    SKIP      [reduce using rule 77 (procedure_invacation)]
    STRING    reduce using rule 66 (function_invocation)
    STRING    [reduce using rule 77 (procedure_invacation)]
    TRUE      reduce using rule 66 (function_invocation)
    TRUE      [reduce using rule 77 (procedure_invacation)]
    VAR       reduce using rule 66 (function_invocation)
    VAR       [reduce using rule 77 (procedure_invacation)]
    '-'       reduce using rule 66 (function_invocation)
    '-'       [reduce using rule 77 (procedure_invacation)]
    $default  reduce using rule 66 (function_invocation)


State 136

   73 loop: FOR ID ':' const_exp '.' . '.' constant_exp content END FOR

    '.'  shift, and go to state 142


State 137

   74 loop: FOR DECREASING ID ':' const_exp . '.' '.' constant_exp content END FOR

    '.'  shift, and go to state 143


State 138

   70 conditional: IF bool_expression THEN content ELSE . content END IF

    ID      shift, and go to state 13
    ARRAY   shift, and go to state 14
    BEG     shift, and go to state 15
    CONST   shift, and go to state 1
    EXIT    shift, and go to state 16
    FALSE   shift, and go to state 17
    FOR     shift, and go to state 18
    GET     shift, and go to state 19
    IF      shift, and go to state 20
    LOOP    shift, and go to state 21
    PUT     shift, and go to state 22
    REAL    shift, and go to state 23
    RESULT  shift, and go to state 24
    RETURN  shift, and go to state 25
    SKIP    shift, and go to state 26
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    VAR     shift, and go to state 3
    '-'     shift, and go to state 29

    ID        [reduce using rule 22 (statments)]
    ID        [reduce using rule 33 (content)]
    ARRAY     [reduce using rule 22 (statments)]
    ARRAY     [reduce using rule 33 (content)]
    BEG       [reduce using rule 22 (statments)]
    BEG       [reduce using rule 33 (content)]
    CONST     [reduce using rule 22 (statments)]
    CONST     [reduce using rule 33 (content)]
    END       reduce using rule 22 (statments)
    END       [reduce using rule 33 (content)]
    EXIT      [reduce using rule 22 (statments)]
    EXIT      [reduce using rule 33 (content)]
    FALSE     [reduce using rule 22 (statments)]
    FALSE     [reduce using rule 33 (content)]
    FOR       [reduce using rule 22 (statments)]
    FOR       [reduce using rule 33 (content)]
    GET       [reduce using rule 22 (statments)]
    GET       [reduce using rule 33 (content)]
    IF        [reduce using rule 22 (statments)]
    IF        [reduce using rule 33 (content)]
    LOOP      [reduce using rule 22 (statments)]
    LOOP      [reduce using rule 33 (content)]
    PUT       [reduce using rule 22 (statments)]
    PUT       [reduce using rule 33 (content)]
    REAL      [reduce using rule 22 (statments)]
    REAL      [reduce using rule 33 (content)]
    RESULT    [reduce using rule 22 (statments)]
    RESULT    [reduce using rule 33 (content)]
    RETURN    [reduce using rule 22 (statments)]
    RETURN    [reduce using rule 33 (content)]
    SKIP      [reduce using rule 22 (statments)]
    SKIP      [reduce using rule 33 (content)]
    STRING    [reduce using rule 22 (statments)]
    STRING    [reduce using rule 33 (content)]
    TRUE      [reduce using rule 22 (statments)]
    TRUE      [reduce using rule 33 (content)]
    VAR       [reduce using rule 22 (statments)]
    VAR       [reduce using rule 33 (content)]
    '-'       [reduce using rule 22 (statments)]
    '-'       [reduce using rule 33 (content)]
    $default  reduce using rule 22 (statments)

    constants             go to state 50
    variable              go to state 51
    constant_exp          go to state 30
    statments             go to state 52
    content               go to state 144
    statment              go to state 33
    block                 go to state 34
    simple                go to state 35
    expression            go to state 36
    bool_expression       go to state 37
    function_invocation   go to state 38
    conditional           go to state 39
    loop                  go to state 40
    procedure_invacation  go to state 41


State 139

   71 conditional: IF bool_expression THEN content END . IF

    IF  shift, and go to state 145


State 140

   26 functionVarB: ',' ID ':' . type

    BOOL  shift, and go to state 80
    INT   shift, and go to state 81
    REAL  shift, and go to state 82

    type  go to state 146


State 141

   23 function: FUNCTION ID '(' functionVarA functionVarB ')' ':' . type content END ID

    BOOL  shift, and go to state 80
    INT   shift, and go to state 81
    REAL  shift, and go to state 82

    type  go to state 147


State 142

   73 loop: FOR ID ':' const_exp '.' '.' . constant_exp content END FOR

    FALSE   shift, and go to state 17
    REAL    shift, and go to state 23
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    constant_exp  go to state 148


State 143

   74 loop: FOR DECREASING ID ':' const_exp '.' . '.' constant_exp content END FOR

    '.'  shift, and go to state 149


State 144

   29 content: content . content
   70 conditional: IF bool_expression THEN content ELSE content . END IF

    ID      shift, and go to state 13
    ARRAY   shift, and go to state 14
    BEG     shift, and go to state 15
    CONST   shift, and go to state 1
    END     shift, and go to state 150
    EXIT    shift, and go to state 16
    FALSE   shift, and go to state 17
    FOR     shift, and go to state 18
    GET     shift, and go to state 19
    IF      shift, and go to state 20
    LOOP    shift, and go to state 21
    PUT     shift, and go to state 22
    REAL    shift, and go to state 23
    RESULT  shift, and go to state 24
    RETURN  shift, and go to state 25
    SKIP    shift, and go to state 26
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    VAR     shift, and go to state 3
    '-'     shift, and go to state 29

    ID      [reduce using rule 22 (statments)]
    ID      [reduce using rule 33 (content)]
    ARRAY   [reduce using rule 22 (statments)]
    ARRAY   [reduce using rule 33 (content)]
    BEG     [reduce using rule 22 (statments)]
    BEG     [reduce using rule 33 (content)]
    CONST   [reduce using rule 22 (statments)]
    CONST   [reduce using rule 33 (content)]
    END     [reduce using rule 22 (statments)]
    END     [reduce using rule 33 (content)]
    EXIT    [reduce using rule 22 (statments)]
    EXIT    [reduce using rule 33 (content)]
    FALSE   [reduce using rule 22 (statments)]
    FALSE   [reduce using rule 33 (content)]
    FOR     [reduce using rule 22 (statments)]
    FOR     [reduce using rule 33 (content)]
    GET     [reduce using rule 22 (statments)]
    GET     [reduce using rule 33 (content)]
    IF      [reduce using rule 22 (statments)]
    IF      [reduce using rule 33 (content)]
    LOOP    [reduce using rule 22 (statments)]
    LOOP    [reduce using rule 33 (content)]
    PUT     [reduce using rule 22 (statments)]
    PUT     [reduce using rule 33 (content)]
    REAL    [reduce using rule 22 (statments)]
    REAL    [reduce using rule 33 (content)]
    RESULT  [reduce using rule 22 (statments)]
    RESULT  [reduce using rule 33 (content)]
    RETURN  [reduce using rule 22 (statments)]
    RETURN  [reduce using rule 33 (content)]
    SKIP    [reduce using rule 22 (statments)]
    SKIP    [reduce using rule 33 (content)]
    STRING  [reduce using rule 22 (statments)]
    STRING  [reduce using rule 33 (content)]
    TRUE    [reduce using rule 22 (statments)]
    TRUE    [reduce using rule 33 (content)]
    VAR     [reduce using rule 22 (statments)]
    VAR     [reduce using rule 33 (content)]
    '-'     [reduce using rule 22 (statments)]
    '-'     [reduce using rule 33 (content)]

    constants             go to state 50
    variable              go to state 51
    constant_exp          go to state 30
    statments             go to state 52
    content               go to state 93
    statment              go to state 33
    block                 go to state 34
    simple                go to state 35
    expression            go to state 36
    bool_expression       go to state 37
    function_invocation   go to state 38
    conditional           go to state 39
    loop                  go to state 40
    procedure_invacation  go to state 41


State 145

   71 conditional: IF bool_expression THEN content END IF .

    $default  reduce using rule 71 (conditional)


State 146

   26 functionVarB: ',' ID ':' type .

    $default  reduce using rule 26 (functionVarB)


State 147

   23 function: FUNCTION ID '(' functionVarA functionVarB ')' ':' type . content END ID

    ID      shift, and go to state 13
    ARRAY   shift, and go to state 14
    BEG     shift, and go to state 15
    CONST   shift, and go to state 1
    EXIT    shift, and go to state 16
    FALSE   shift, and go to state 17
    FOR     shift, and go to state 18
    GET     shift, and go to state 19
    IF      shift, and go to state 20
    LOOP    shift, and go to state 21
    PUT     shift, and go to state 22
    REAL    shift, and go to state 23
    RESULT  shift, and go to state 24
    RETURN  shift, and go to state 25
    SKIP    shift, and go to state 26
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    VAR     shift, and go to state 3
    '-'     shift, and go to state 29

    ID        [reduce using rule 22 (statments)]
    ID        [reduce using rule 33 (content)]
    ARRAY     [reduce using rule 22 (statments)]
    ARRAY     [reduce using rule 33 (content)]
    BEG       [reduce using rule 22 (statments)]
    BEG       [reduce using rule 33 (content)]
    CONST     [reduce using rule 22 (statments)]
    CONST     [reduce using rule 33 (content)]
    END       reduce using rule 22 (statments)
    END       [reduce using rule 33 (content)]
    EXIT      [reduce using rule 22 (statments)]
    EXIT      [reduce using rule 33 (content)]
    FALSE     [reduce using rule 22 (statments)]
    FALSE     [reduce using rule 33 (content)]
    FOR       [reduce using rule 22 (statments)]
    FOR       [reduce using rule 33 (content)]
    GET       [reduce using rule 22 (statments)]
    GET       [reduce using rule 33 (content)]
    IF        [reduce using rule 22 (statments)]
    IF        [reduce using rule 33 (content)]
    LOOP      [reduce using rule 22 (statments)]
    LOOP      [reduce using rule 33 (content)]
    PUT       [reduce using rule 22 (statments)]
    PUT       [reduce using rule 33 (content)]
    REAL      [reduce using rule 22 (statments)]
    REAL      [reduce using rule 33 (content)]
    RESULT    [reduce using rule 22 (statments)]
    RESULT    [reduce using rule 33 (content)]
    RETURN    [reduce using rule 22 (statments)]
    RETURN    [reduce using rule 33 (content)]
    SKIP      [reduce using rule 22 (statments)]
    SKIP      [reduce using rule 33 (content)]
    STRING    [reduce using rule 22 (statments)]
    STRING    [reduce using rule 33 (content)]
    TRUE      [reduce using rule 22 (statments)]
    TRUE      [reduce using rule 33 (content)]
    VAR       [reduce using rule 22 (statments)]
    VAR       [reduce using rule 33 (content)]
    '-'       [reduce using rule 22 (statments)]
    '-'       [reduce using rule 33 (content)]
    $default  reduce using rule 22 (statments)

    constants             go to state 50
    variable              go to state 51
    constant_exp          go to state 30
    statments             go to state 52
    content               go to state 151
    statment              go to state 33
    block                 go to state 34
    simple                go to state 35
    expression            go to state 36
    bool_expression       go to state 37
    function_invocation   go to state 38
    conditional           go to state 39
    loop                  go to state 40
    procedure_invacation  go to state 41


State 148

   73 loop: FOR ID ':' const_exp '.' '.' constant_exp . content END FOR

    ID      shift, and go to state 13
    ARRAY   shift, and go to state 14
    BEG     shift, and go to state 15
    CONST   shift, and go to state 1
    EXIT    shift, and go to state 16
    FALSE   shift, and go to state 17
    FOR     shift, and go to state 18
    GET     shift, and go to state 19
    IF      shift, and go to state 20
    LOOP    shift, and go to state 21
    PUT     shift, and go to state 22
    REAL    shift, and go to state 23
    RESULT  shift, and go to state 24
    RETURN  shift, and go to state 25
    SKIP    shift, and go to state 26
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    VAR     shift, and go to state 3
    '-'     shift, and go to state 29

    ID        [reduce using rule 22 (statments)]
    ID        [reduce using rule 33 (content)]
    ARRAY     [reduce using rule 22 (statments)]
    ARRAY     [reduce using rule 33 (content)]
    BEG       [reduce using rule 22 (statments)]
    BEG       [reduce using rule 33 (content)]
    CONST     [reduce using rule 22 (statments)]
    CONST     [reduce using rule 33 (content)]
    END       reduce using rule 22 (statments)
    END       [reduce using rule 33 (content)]
    EXIT      [reduce using rule 22 (statments)]
    EXIT      [reduce using rule 33 (content)]
    FALSE     [reduce using rule 22 (statments)]
    FALSE     [reduce using rule 33 (content)]
    FOR       [reduce using rule 22 (statments)]
    FOR       [reduce using rule 33 (content)]
    GET       [reduce using rule 22 (statments)]
    GET       [reduce using rule 33 (content)]
    IF        [reduce using rule 22 (statments)]
    IF        [reduce using rule 33 (content)]
    LOOP      [reduce using rule 22 (statments)]
    LOOP      [reduce using rule 33 (content)]
    PUT       [reduce using rule 22 (statments)]
    PUT       [reduce using rule 33 (content)]
    REAL      [reduce using rule 22 (statments)]
    REAL      [reduce using rule 33 (content)]
    RESULT    [reduce using rule 22 (statments)]
    RESULT    [reduce using rule 33 (content)]
    RETURN    [reduce using rule 22 (statments)]
    RETURN    [reduce using rule 33 (content)]
    SKIP      [reduce using rule 22 (statments)]
    SKIP      [reduce using rule 33 (content)]
    STRING    [reduce using rule 22 (statments)]
    STRING    [reduce using rule 33 (content)]
    TRUE      [reduce using rule 22 (statments)]
    TRUE      [reduce using rule 33 (content)]
    VAR       [reduce using rule 22 (statments)]
    VAR       [reduce using rule 33 (content)]
    '-'       [reduce using rule 22 (statments)]
    '-'       [reduce using rule 33 (content)]
    $default  reduce using rule 22 (statments)

    constants             go to state 50
    variable              go to state 51
    constant_exp          go to state 30
    statments             go to state 52
    content               go to state 152
    statment              go to state 33
    block                 go to state 34
    simple                go to state 35
    expression            go to state 36
    bool_expression       go to state 37
    function_invocation   go to state 38
    conditional           go to state 39
    loop                  go to state 40
    procedure_invacation  go to state 41


State 149

   74 loop: FOR DECREASING ID ':' const_exp '.' '.' . constant_exp content END FOR

    FALSE   shift, and go to state 17
    REAL    shift, and go to state 23
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    '-'     shift, and go to state 29

    constant_exp  go to state 153


State 150

   70 conditional: IF bool_expression THEN content ELSE content END . IF

    IF  shift, and go to state 154


State 151

   23 function: FUNCTION ID '(' functionVarA functionVarB ')' ':' type content . END ID
   29 content: content . content

    ID      shift, and go to state 13
    ARRAY   shift, and go to state 14
    BEG     shift, and go to state 15
    CONST   shift, and go to state 1
    END     shift, and go to state 155
    EXIT    shift, and go to state 16
    FALSE   shift, and go to state 17
    FOR     shift, and go to state 18
    GET     shift, and go to state 19
    IF      shift, and go to state 20
    LOOP    shift, and go to state 21
    PUT     shift, and go to state 22
    REAL    shift, and go to state 23
    RESULT  shift, and go to state 24
    RETURN  shift, and go to state 25
    SKIP    shift, and go to state 26
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    VAR     shift, and go to state 3
    '-'     shift, and go to state 29

    ID      [reduce using rule 22 (statments)]
    ID      [reduce using rule 33 (content)]
    ARRAY   [reduce using rule 22 (statments)]
    ARRAY   [reduce using rule 33 (content)]
    BEG     [reduce using rule 22 (statments)]
    BEG     [reduce using rule 33 (content)]
    CONST   [reduce using rule 22 (statments)]
    CONST   [reduce using rule 33 (content)]
    END     [reduce using rule 22 (statments)]
    END     [reduce using rule 33 (content)]
    EXIT    [reduce using rule 22 (statments)]
    EXIT    [reduce using rule 33 (content)]
    FALSE   [reduce using rule 22 (statments)]
    FALSE   [reduce using rule 33 (content)]
    FOR     [reduce using rule 22 (statments)]
    FOR     [reduce using rule 33 (content)]
    GET     [reduce using rule 22 (statments)]
    GET     [reduce using rule 33 (content)]
    IF      [reduce using rule 22 (statments)]
    IF      [reduce using rule 33 (content)]
    LOOP    [reduce using rule 22 (statments)]
    LOOP    [reduce using rule 33 (content)]
    PUT     [reduce using rule 22 (statments)]
    PUT     [reduce using rule 33 (content)]
    REAL    [reduce using rule 22 (statments)]
    REAL    [reduce using rule 33 (content)]
    RESULT  [reduce using rule 22 (statments)]
    RESULT  [reduce using rule 33 (content)]
    RETURN  [reduce using rule 22 (statments)]
    RETURN  [reduce using rule 33 (content)]
    SKIP    [reduce using rule 22 (statments)]
    SKIP    [reduce using rule 33 (content)]
    STRING  [reduce using rule 22 (statments)]
    STRING  [reduce using rule 33 (content)]
    TRUE    [reduce using rule 22 (statments)]
    TRUE    [reduce using rule 33 (content)]
    VAR     [reduce using rule 22 (statments)]
    VAR     [reduce using rule 33 (content)]
    '-'     [reduce using rule 22 (statments)]
    '-'     [reduce using rule 33 (content)]

    constants             go to state 50
    variable              go to state 51
    constant_exp          go to state 30
    statments             go to state 52
    content               go to state 93
    statment              go to state 33
    block                 go to state 34
    simple                go to state 35
    expression            go to state 36
    bool_expression       go to state 37
    function_invocation   go to state 38
    conditional           go to state 39
    loop                  go to state 40
    procedure_invacation  go to state 41


State 152

   29 content: content . content
   73 loop: FOR ID ':' const_exp '.' '.' constant_exp content . END FOR

    ID      shift, and go to state 13
    ARRAY   shift, and go to state 14
    BEG     shift, and go to state 15
    CONST   shift, and go to state 1
    END     shift, and go to state 156
    EXIT    shift, and go to state 16
    FALSE   shift, and go to state 17
    FOR     shift, and go to state 18
    GET     shift, and go to state 19
    IF      shift, and go to state 20
    LOOP    shift, and go to state 21
    PUT     shift, and go to state 22
    REAL    shift, and go to state 23
    RESULT  shift, and go to state 24
    RETURN  shift, and go to state 25
    SKIP    shift, and go to state 26
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    VAR     shift, and go to state 3
    '-'     shift, and go to state 29

    ID      [reduce using rule 22 (statments)]
    ID      [reduce using rule 33 (content)]
    ARRAY   [reduce using rule 22 (statments)]
    ARRAY   [reduce using rule 33 (content)]
    BEG     [reduce using rule 22 (statments)]
    BEG     [reduce using rule 33 (content)]
    CONST   [reduce using rule 22 (statments)]
    CONST   [reduce using rule 33 (content)]
    END     [reduce using rule 22 (statments)]
    END     [reduce using rule 33 (content)]
    EXIT    [reduce using rule 22 (statments)]
    EXIT    [reduce using rule 33 (content)]
    FALSE   [reduce using rule 22 (statments)]
    FALSE   [reduce using rule 33 (content)]
    FOR     [reduce using rule 22 (statments)]
    FOR     [reduce using rule 33 (content)]
    GET     [reduce using rule 22 (statments)]
    GET     [reduce using rule 33 (content)]
    IF      [reduce using rule 22 (statments)]
    IF      [reduce using rule 33 (content)]
    LOOP    [reduce using rule 22 (statments)]
    LOOP    [reduce using rule 33 (content)]
    PUT     [reduce using rule 22 (statments)]
    PUT     [reduce using rule 33 (content)]
    REAL    [reduce using rule 22 (statments)]
    REAL    [reduce using rule 33 (content)]
    RESULT  [reduce using rule 22 (statments)]
    RESULT  [reduce using rule 33 (content)]
    RETURN  [reduce using rule 22 (statments)]
    RETURN  [reduce using rule 33 (content)]
    SKIP    [reduce using rule 22 (statments)]
    SKIP    [reduce using rule 33 (content)]
    STRING  [reduce using rule 22 (statments)]
    STRING  [reduce using rule 33 (content)]
    TRUE    [reduce using rule 22 (statments)]
    TRUE    [reduce using rule 33 (content)]
    VAR     [reduce using rule 22 (statments)]
    VAR     [reduce using rule 33 (content)]
    '-'     [reduce using rule 22 (statments)]
    '-'     [reduce using rule 33 (content)]

    constants             go to state 50
    variable              go to state 51
    constant_exp          go to state 30
    statments             go to state 52
    content               go to state 93
    statment              go to state 33
    block                 go to state 34
    simple                go to state 35
    expression            go to state 36
    bool_expression       go to state 37
    function_invocation   go to state 38
    conditional           go to state 39
    loop                  go to state 40
    procedure_invacation  go to state 41


State 153

   74 loop: FOR DECREASING ID ':' const_exp '.' '.' constant_exp . content END FOR

    ID      shift, and go to state 13
    ARRAY   shift, and go to state 14
    BEG     shift, and go to state 15
    CONST   shift, and go to state 1
    EXIT    shift, and go to state 16
    FALSE   shift, and go to state 17
    FOR     shift, and go to state 18
    GET     shift, and go to state 19
    IF      shift, and go to state 20
    LOOP    shift, and go to state 21
    PUT     shift, and go to state 22
    REAL    shift, and go to state 23
    RESULT  shift, and go to state 24
    RETURN  shift, and go to state 25
    SKIP    shift, and go to state 26
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    VAR     shift, and go to state 3
    '-'     shift, and go to state 29

    ID        [reduce using rule 22 (statments)]
    ID        [reduce using rule 33 (content)]
    ARRAY     [reduce using rule 22 (statments)]
    ARRAY     [reduce using rule 33 (content)]
    BEG       [reduce using rule 22 (statments)]
    BEG       [reduce using rule 33 (content)]
    CONST     [reduce using rule 22 (statments)]
    CONST     [reduce using rule 33 (content)]
    END       reduce using rule 22 (statments)
    END       [reduce using rule 33 (content)]
    EXIT      [reduce using rule 22 (statments)]
    EXIT      [reduce using rule 33 (content)]
    FALSE     [reduce using rule 22 (statments)]
    FALSE     [reduce using rule 33 (content)]
    FOR       [reduce using rule 22 (statments)]
    FOR       [reduce using rule 33 (content)]
    GET       [reduce using rule 22 (statments)]
    GET       [reduce using rule 33 (content)]
    IF        [reduce using rule 22 (statments)]
    IF        [reduce using rule 33 (content)]
    LOOP      [reduce using rule 22 (statments)]
    LOOP      [reduce using rule 33 (content)]
    PUT       [reduce using rule 22 (statments)]
    PUT       [reduce using rule 33 (content)]
    REAL      [reduce using rule 22 (statments)]
    REAL      [reduce using rule 33 (content)]
    RESULT    [reduce using rule 22 (statments)]
    RESULT    [reduce using rule 33 (content)]
    RETURN    [reduce using rule 22 (statments)]
    RETURN    [reduce using rule 33 (content)]
    SKIP      [reduce using rule 22 (statments)]
    SKIP      [reduce using rule 33 (content)]
    STRING    [reduce using rule 22 (statments)]
    STRING    [reduce using rule 33 (content)]
    TRUE      [reduce using rule 22 (statments)]
    TRUE      [reduce using rule 33 (content)]
    VAR       [reduce using rule 22 (statments)]
    VAR       [reduce using rule 33 (content)]
    '-'       [reduce using rule 22 (statments)]
    '-'       [reduce using rule 33 (content)]
    $default  reduce using rule 22 (statments)

    constants             go to state 50
    variable              go to state 51
    constant_exp          go to state 30
    statments             go to state 52
    content               go to state 157
    statment              go to state 33
    block                 go to state 34
    simple                go to state 35
    expression            go to state 36
    bool_expression       go to state 37
    function_invocation   go to state 38
    conditional           go to state 39
    loop                  go to state 40
    procedure_invacation  go to state 41


State 154

   70 conditional: IF bool_expression THEN content ELSE content END IF .

    $default  reduce using rule 70 (conditional)


State 155

   23 function: FUNCTION ID '(' functionVarA functionVarB ')' ':' type content END . ID

    ID  shift, and go to state 158


State 156

   73 loop: FOR ID ':' const_exp '.' '.' constant_exp content END . FOR

    FOR  shift, and go to state 159


State 157

   29 content: content . content
   74 loop: FOR DECREASING ID ':' const_exp '.' '.' constant_exp content . END FOR

    ID      shift, and go to state 13
    ARRAY   shift, and go to state 14
    BEG     shift, and go to state 15
    CONST   shift, and go to state 1
    END     shift, and go to state 160
    EXIT    shift, and go to state 16
    FALSE   shift, and go to state 17
    FOR     shift, and go to state 18
    GET     shift, and go to state 19
    IF      shift, and go to state 20
    LOOP    shift, and go to state 21
    PUT     shift, and go to state 22
    REAL    shift, and go to state 23
    RESULT  shift, and go to state 24
    RETURN  shift, and go to state 25
    SKIP    shift, and go to state 26
    STRING  shift, and go to state 27
    TRUE    shift, and go to state 28
    VAR     shift, and go to state 3
    '-'     shift, and go to state 29

    ID      [reduce using rule 22 (statments)]
    ID      [reduce using rule 33 (content)]
    ARRAY   [reduce using rule 22 (statments)]
    ARRAY   [reduce using rule 33 (content)]
    BEG     [reduce using rule 22 (statments)]
    BEG     [reduce using rule 33 (content)]
    CONST   [reduce using rule 22 (statments)]
    CONST   [reduce using rule 33 (content)]
    END     [reduce using rule 22 (statments)]
    END     [reduce using rule 33 (content)]
    EXIT    [reduce using rule 22 (statments)]
    EXIT    [reduce using rule 33 (content)]
    FALSE   [reduce using rule 22 (statments)]
    FALSE   [reduce using rule 33 (content)]
    FOR     [reduce using rule 22 (statments)]
    FOR     [reduce using rule 33 (content)]
    GET     [reduce using rule 22 (statments)]
    GET     [reduce using rule 33 (content)]
    IF      [reduce using rule 22 (statments)]
    IF      [reduce using rule 33 (content)]
    LOOP    [reduce using rule 22 (statments)]
    LOOP    [reduce using rule 33 (content)]
    PUT     [reduce using rule 22 (statments)]
    PUT     [reduce using rule 33 (content)]
    REAL    [reduce using rule 22 (statments)]
    REAL    [reduce using rule 33 (content)]
    RESULT  [reduce using rule 22 (statments)]
    RESULT  [reduce using rule 33 (content)]
    RETURN  [reduce using rule 22 (statments)]
    RETURN  [reduce using rule 33 (content)]
    SKIP    [reduce using rule 22 (statments)]
    SKIP    [reduce using rule 33 (content)]
    STRING  [reduce using rule 22 (statments)]
    STRING  [reduce using rule 33 (content)]
    TRUE    [reduce using rule 22 (statments)]
    TRUE    [reduce using rule 33 (content)]
    VAR     [reduce using rule 22 (statments)]
    VAR     [reduce using rule 33 (content)]
    '-'     [reduce using rule 22 (statments)]
    '-'     [reduce using rule 33 (content)]

    constants             go to state 50
    variable              go to state 51
    constant_exp          go to state 30
    statments             go to state 52
    content               go to state 93
    statment              go to state 33
    block                 go to state 34
    simple                go to state 35
    expression            go to state 36
    bool_expression       go to state 37
    function_invocation   go to state 38
    conditional           go to state 39
    loop                  go to state 40
    procedure_invacation  go to state 41


State 158

   23 function: FUNCTION ID '(' functionVarA functionVarB ')' ':' type content END ID .

    $default  reduce using rule 23 (function)


State 159

   73 loop: FOR ID ':' const_exp '.' '.' constant_exp content END FOR .

    $default  reduce using rule 73 (loop)


State 160

   74 loop: FOR DECREASING ID ':' const_exp '.' '.' constant_exp content END . FOR

    FOR  shift, and go to state 161


State 161

   74 loop: FOR DECREASING ID ':' const_exp '.' '.' constant_exp content END FOR .

    $default  reduce using rule 74 (loop)
